D G "__PCM__" 0 173 ""5.112""
D G "__DEVICE__" 0 173 "1574"
D G "__DATE__" 0 173 ""28-Apr-23""
D G "__TIME__" 0 173 ""16:11:17""
D G "_UNICODE" 0 173 ""?""
D G "__EVAL" 0 173 ""?"" "Standard Header file for the PIC16LF1574 device ////////////////"
c L "set_tris_a" 2 3 16 "FUNCTION"
F N "set_tris_a" 2 50 ""
V L "value" 2 50 "int8" `55 
F B "set_tris_a" 2 50 "void(int8 value)" `54 
F N "set_tris_c" 2 51 ""
V L "value" 2 51 "int8" `57 
F B "set_tris_c" 2 51 "void(int8 value)" `56 
F N "set_input_level_a" 2 52 ""
V L "value" 2 52 "int8" `59 
F B "set_input_level_a" 2 52 "void(int8 value)" `58 
F N "set_input_level_c" 2 53 ""
V L "value" 2 53 "int8" `61 
F B "set_input_level_c" 2 53 "void(int8 value)" `60 
F N "set_open_drain_a" 2 54 ""
V L "value" 2 54 "int8" `63 
F B "set_open_drain_a" 2 54 "void(int8 value)" `62 
F N "set_open_drain_c" 2 55 ""
V L "value" 2 55 "int8" `65 
F B "set_open_drain_c" 2 55 "void(int8 value)" `64 
F N "get_tris_a" 2 56 ""
F B "get_tris_a" 2 56 "int8()" `66 
F N "get_tris_c" 2 57 ""
F B "get_tris_c" 2 57 "int8()" `67 
F N "output_a" 2 58 ""
V L "value" 2 58 "int8" `69 
F B "output_a" 2 58 "void(int8 value)" `68 
F N "output_c" 2 59 ""
V L "value" 2 59 "int8" `71 
F B "output_c" 2 59 "void(int8 value)" `70 
F N "input_a" 2 60 ""
F B "input_a" 2 60 "int8()" `72 
F N "input_c" 2 61 ""
F B "input_c" 2 61 "int8()" `73 
F N "input_change_a" 2 62 ""
F B "input_change_a" 2 62 "int8()" `74 
F N "input_change_c" 2 63 ""
F B "input_change_c" 2 63 "int8()" `75 
F N "port_a_pullups" 2 64 ""
V L "upmask" 2 64 "int8" `77 
F B "port_a_pullups" 2 64 "void(int8 upmask)" `76 
F N "port_c_pullups" 2 65 ""
V L "upmask" 2 65 "int8" `79 
F B "port_c_pullups" 2 65 "void(int8 upmask)" `78 
F N "set_slow_slew_a" 2 66 ""
V L "value" 2 66 "int8" `81 
F B "set_slow_slew_a" 2 66 "void(int8 value)" `80 
F N "set_slow_slew_c" 2 67 ""
V L "value" 2 67 "int8" `83 
F B "set_slow_slew_c" 2 67 "void(int8 value)" `82 
F N "input" 2 68 ""
V L "pin" 2 68 "int16" `85 
F B "input" 2 68 "int8(int16 pin)" `84 
F N "input_state" 2 69 ""
V L "pin" 2 69 "int16" `87 
F B "input_state" 2 69 "int8(int16 pin)" `86 
F N "output_low" 2 70 ""
V L "pin" 2 70 "int16" `89 
F B "output_low" 2 70 "void(int16 pin)" `88 
F N "output_high" 2 71 ""
V L "pin" 2 71 "int16" `91 
F B "output_high" 2 71 "void(int16 pin)" `90 
F N "output_toggle" 2 72 ""
V L "pin" 2 72 "int16" `93 
F B "output_toggle" 2 72 "void(int16 pin)" `92 
F N "output_bit" 2 73 ""
V L "pin" 2 73 "int16" `95 
V L "level" 2 73 "int8" `96 
F B "output_bit" 2 73 "void(int16 pin,int8 level)" `94 
F N "output_float" 2 74 ""
V L "pin" 2 74 "int16" `98 
F B "output_float" 2 74 "void(int16 pin)" `97 
F N "output_drive" 2 75 ""
V L "pin" 2 75 "int16" `100 
F B "output_drive" 2 75 "void(int16 pin)" `99  "Constants used to identify pins in the above are:"
D G "PIN_A0" 2 79 "96"
D G "PIN_A1" 2 80 "97"
D G "PIN_A2" 2 81 "98"
D G "PIN_A3" 2 82 "99"
D G "PIN_A4" 2 83 "100"
D G "PIN_A5" 2 84 "101"
D G "PIN_C0" 2 86 "112"
D G "PIN_C1" 2 87 "113"
D G "PIN_C2" 2 88 "114"
D G "PIN_C3" 2 89 "115"
D G "PIN_C4" 2 90 "116"
D G "PIN_C5" 2 91 "117"
D G "FALSE" 2 94 "0"
D G "TRUE" 2 95 "1"
D G "BYTE" 2 97 "int8"
D G "BOOLEAN" 2 98 "int1"
D G "getc" 2 100 "getch"
D G "fgetc" 2 101 "getch"
D G "getchar" 2 102 "getch"
D G "putc" 2 103 "putchar"
D G "fputc" 2 104 "putchar"
D G "fgets" 2 105 "gets"
D G "fputs" 2 106 "puts"
c L "output_drive" 2 3 3 "FUNCTION"
F N "restart_cause" 2 111 ""
F B "restart_cause" 2 111 "int8()" `101 
F N "reset_cpu" 2 112 ""
F B "reset_cpu" 2 112 "void()" `102 
F N "sleep" 2 113 ""
F B "sleep" 2 113 "void()" `103  "Constants returned from RESTART_CAUSE() are:"
D G "NORMAL_POWER_UP" 2 115 "0x3C"
D G "MCLR_FROM_POWER_UP" 2 116 "0x34"
D G "BROWNOUT_RESTART" 2 117 "0x3E"
D G "MCLR_FROM_SLEEP" 2 118 "0x27"
D G "WDT_TIMEOUT" 2 119 "0x1F"
D G "WDT_FROM_SLEEP" 2 120 "0x0F"
D G "INTERRUPT_FROM_SLEEP" 2 121 "0x2F"
D G "MCLR_FROM_RUN" 2 122 "0x37"
D G "RESET_INSTRUCTION" 2 123 "0x3B"
D G "STACK_OVERFLOW" 2 124 "0xBF"
D G "STACK_UNDERFLOW" 2 125 "0x7F"
c L "sleep" 2 3 5 "FUNCTION"
F N "setup_timer_0" 2 132 ""
V L "mode" 2 132 "int8" `105 
F B "setup_timer_0" 2 132 "void(int8 mode)" `104 
F N "set_timer0" 2 133 ""
V L "value" 2 133 "int8" `107 
F B "set_timer0" 2 133 "void(int8 value)" `106 
F N "get_timer0" 2 134 ""
F B "get_timer0" 2 134 "int8()" `108 
F N "setup_counters" 2 135 ""
V L "mode" 2 135 "int8" `110 
V L "prescaler" 2 135 "int8" `111 
F B "setup_counters" 2 135 "void(int8 mode,int8 prescaler)" `109 
F N "set_rtcc" 2 136 ""
V L "value" 2 136 "int8" `113 
F B "set_rtcc" 2 136 "void(int8 value)" `112 
F N "get_rtcc" 2 137 ""
F B "get_rtcc" 2 137 "int8()" `114  "Constants used for SETUP_TIMER_0() are:"
D G "T0_INTERNAL" 2 139 "0"
D G "T0_EXT_L_TO_H" 2 140 "32"
D G "T0_EXT_H_TO_L" 2 141 "48"
D G "T0_DIV_1" 2 143 "8"
D G "T0_DIV_2" 2 144 "0"
D G "T0_DIV_4" 2 145 "1"
D G "T0_DIV_8" 2 146 "2"
D G "T0_DIV_16" 2 147 "3"
D G "T0_DIV_32" 2 148 "4"
D G "T0_DIV_64" 2 149 "5"
D G "T0_DIV_128" 2 150 "6"
D G "T0_DIV_256" 2 151 "7"
D G "T0_8_BIT" 2 154 "0"
D G "RTCC_INTERNAL" 2 158 "0"
D G "RTCC_EXT_L_TO_H" 2 159 "32"
D G "RTCC_EXT_H_TO_L" 2 160 "48"
D G "RTCC_DIV_1" 2 161 "8"
D G "RTCC_DIV_2" 2 162 "0"
D G "RTCC_DIV_4" 2 163 "1"
D G "RTCC_DIV_8" 2 164 "2"
D G "RTCC_DIV_16" 2 165 "3"
D G "RTCC_DIV_32" 2 166 "4"
D G "RTCC_DIV_64" 2 167 "5"
D G "RTCC_DIV_128" 2 168 "6"
D G "RTCC_DIV_256" 2 169 "7"
D G "RTCC_8_BIT" 2 170 "0"
c L "get_rtcc" 2 3 7 "FUNCTION"
F N "setup_wdt" 2 180 ""
V L "mode" 2 180 "int16" `116 
F B "setup_wdt" 2 180 "void(int16 mode)" `115 
F N "restart_wdt" 2 181 ""
F B "restart_wdt" 2 181 "void()" `117  "Constants used for SETUP_WDT() are:"
D G "WDT_ON" 2 183 "0x1000"
D G "WDT_OFF" 2 184 "0x2000"
D G "WDT_1MS" 2 186 "0x100"
D G "WDT_2MS" 2 187 "0x101"
D G "WDT_4MS" 2 188 "0x102"
D G "WDT_8MS" 2 189 "0x103"
D G "WDT_16MS" 2 190 "0x104"
D G "WDT_32MS" 2 191 "0x105"
D G "WDT_64MS" 2 192 "0x106"
D G "WDT_128MS" 2 193 "0x107"
D G "WDT_256MS" 2 194 "0x108"
D G "WDT_512MS" 2 195 "0x109"
D G "WDT_1S" 2 196 "0x10A"
D G "WDT_2S" 2 197 "0x10B"
D G "WDT_4S" 2 198 "0x10C"
D G "WDT_8S" 2 199 "0x10D"
D G "WDT_16S" 2 200 "0x10E"
D G "WDT_32S" 2 201 "0x10F"
D G "WDT_64S" 2 202 "0x110"
D G "WDT_128S" 2 203 "0x111"
D G "WDT_256S" 2 204 "0x112"
c L "restart_wdt" 2 3 3 "FUNCTION"
F N "setup_timer_1" 2 210 ""
V L "mode" 2 210 "int16" `119 
F B "setup_timer_1" 2 210 "void(int16 mode)" `118 
F N "get_timer1" 2 211 ""
F B "get_timer1" 2 211 "int16()" `120 
F N "set_timer1" 2 212 ""
V L "value" 2 212 "int16" `122 
F B "set_timer1" 2 212 "void(int16 value)" `121  "Constants used for SETUP_TIMER_1() are:"
D G "T1_DISABLED" 2 215 "0"
D G "T1_INTERNAL" 2 216 "0x07"
D G "T1_EXTERNAL" 2 217 "0x87"
D G "T1_EXTERNAL_SYNC" 2 218 "0x83"
D G "T1_FOSC" 2 219 "0x47"
D G "T1_ENABLE_SOSC" 2 221 "0x08"
D G "T1_DIV_BY_1" 2 223 "0"
D G "T1_DIV_BY_2" 2 224 "0x10"
D G "T1_DIV_BY_4" 2 225 "0x20"
D G "T1_DIV_BY_8" 2 226 "0x30"
D G "T1_GATE" 2 228 "0x8000"
D G "T1_GATE_INVERTED" 2 229 "0xC000"
D G "T1_GATE_TOGGLE" 2 230 "0xA000"
D G "T1_GATE_SINGLE" 2 231 "0x9000"
D G "T1_GATE_TIMER2" 2 232 "0x8100"
D G "T1_GATE_COMP1" 2 233 "0x8200"
D G "T1_GATE_COMP2" 2 234 "0x8300"
c L "set_timer1" 2 3 3 "FUNCTION"
F N "setup_timer_2" 2 239 ""
V L "mode" 2 239 "int8" `124 
V L "period" 2 239 "int8" `125 
V L "postscale" 2 239 "int8" `126 
F B "setup_timer_2" 2 239 "void(int8 mode,int8 period,int8 postscale)" `123 
F N "get_timer2" 2 240 ""
F B "get_timer2" 2 240 "int8()" `127 
F N "set_timer2" 2 241 ""
V L "value" 2 241 "int8" `129 
F B "set_timer2" 2 241 "void(int8 value)" `128  "Constants used for SETUP_TIMER_2() are:"
D G "T2_DISABLED" 2 243 "0"
D G "T2_DIV_BY_1" 2 244 "4"
D G "T2_DIV_BY_4" 2 245 "5"
D G "T2_DIV_BY_16" 2 246 "6"
D G "T2_DIV_BY_64" 2 247 "7"
c L "set_timer2" 2 3 4 "FUNCTION"
F N "setup_pwm1" 2 253 ""
V L "mode" 2 253 "int32" `131 
F B "setup_pwm1" 2 253 "void(int32 mode)" `130 
F N "setup_pwm1" 2 254 ""
V L "mode" 2 254 "int32" `133 
V L "mode1" 2 254 "int32" `134 
F B "setup_pwm1" 2 254 "void(int32 mode,int32 mode1)" `132 
F N "set_pwm1_duty" 2 255 ""
V L "duty" 2 255 "int16" `136 
F B "set_pwm1_duty" 2 255 "void(int16 duty)" `135 
F N "set_pwm1_period" 2 256 ""
V L "period" 2 256 "int16" `138 
F B "set_pwm1_period" 2 256 "void(int16 period)" `137 
F N "set_pwm1_phase" 2 257 ""
V L "phase" 2 257 "int16" `140 
F B "set_pwm1_phase" 2 257 "void(int16 phase)" `139 
F N "set_pwm1_offset" 2 258 ""
V L "offset" 2 258 "int16" `142 
F B "set_pwm1_offset" 2 258 "void(int16 offset)" `141 
F N "enable_pwm1_interrupt" 2 259 ""
V L "interrupt" 2 259 "int8" `144 
F B "enable_pwm1_interrupt" 2 259 "void(int8 interrupt)" `143 
F N "disable_pwm1_interrupt" 2 260 ""
V L "interrupt" 2 260 "int8" `146 
F B "disable_pwm1_interrupt" 2 260 "void(int8 interrupt)" `145 
F N "clear_pwm1_interrupt" 2 261 ""
V L "interrupt" 2 261 "int8" `148 
F B "clear_pwm1_interrupt" 2 261 "void(int8 interrupt)" `147 
F N "pwm1_interrupt_active" 2 262 ""
V L "interrupt" 2 262 "int8" `150 
F B "pwm1_interrupt_active" 2 262 "int8(int8 interrupt)" `149 
F N "setup_pwm2" 2 263 ""
V L "mode" 2 263 "int32" `152 
F B "setup_pwm2" 2 263 "void(int32 mode)" `151 
F N "setup_pwm2" 2 264 ""
V L "mode" 2 264 "int32" `154 
V L "mode1" 2 264 "int32" `155 
F B "setup_pwm2" 2 264 "void(int32 mode,int32 mode1)" `153 
F N "set_pwm2_duty" 2 265 ""
V L "duty" 2 265 "int16" `157 
F B "set_pwm2_duty" 2 265 "void(int16 duty)" `156 
F N "set_pwm2_period" 2 266 ""
V L "period" 2 266 "int16" `159 
F B "set_pwm2_period" 2 266 "void(int16 period)" `158 
F N "set_pwm2_phase" 2 267 ""
V L "phase" 2 267 "int16" `161 
F B "set_pwm2_phase" 2 267 "void(int16 phase)" `160 
F N "set_pwm2_offset" 2 268 ""
V L "offset" 2 268 "int16" `163 
F B "set_pwm2_offset" 2 268 "void(int16 offset)" `162 
F N "enable_pwm2_interrupt" 2 269 ""
V L "interrupt" 2 269 "int8" `165 
F B "enable_pwm2_interrupt" 2 269 "void(int8 interrupt)" `164 
F N "disable_pwm2_interrupt" 2 270 ""
V L "interrupt" 2 270 "int8" `167 
F B "disable_pwm2_interrupt" 2 270 "void(int8 interrupt)" `166 
F N "clear_pwm2_interrupt" 2 271 ""
V L "interrupt" 2 271 "int8" `169 
F B "clear_pwm2_interrupt" 2 271 "void(int8 interrupt)" `168 
F N "pwm2_interrupt_active" 2 272 ""
V L "interrupt" 2 272 "int8" `171 
F B "pwm2_interrupt_active" 2 272 "int8(int8 interrupt)" `170 
F N "setup_pwm3" 2 273 ""
V L "mode" 2 273 "int16" `173 
F B "setup_pwm3" 2 273 "void(int16 mode)" `172 
F N "setup_pwm3" 2 274 ""
V L "mode" 2 274 "int16" `175 
V L "mode1" 2 274 "int32" `176 
F B "setup_pwm3" 2 274 "void(int16 mode,int32 mode1)" `174 
F N "set_pwm3_duty" 2 275 ""
V L "duty" 2 275 "int16" `178 
F B "set_pwm3_duty" 2 275 "void(int16 duty)" `177 
F N "set_pwm3_period" 2 276 ""
V L "period" 2 276 "int16" `180 
F B "set_pwm3_period" 2 276 "void(int16 period)" `179 
F N "set_pwm3_phase" 2 277 ""
V L "phase" 2 277 "int16" `182 
F B "set_pwm3_phase" 2 277 "void(int16 phase)" `181 
F N "set_pwm3_offset" 2 278 ""
V L "offset" 2 278 "int16" `184 
F B "set_pwm3_offset" 2 278 "void(int16 offset)" `183 
F N "enable_pwm3_interrupt" 2 279 ""
V L "interrupt" 2 279 "int8" `186 
F B "enable_pwm3_interrupt" 2 279 "void(int8 interrupt)" `185 
F N "disable_pwm3_interrupt" 2 280 ""
V L "interrupt" 2 280 "int8" `188 
F B "disable_pwm3_interrupt" 2 280 "void(int8 interrupt)" `187 
F N "clear_pwm3_interrupt" 2 281 ""
V L "interrupt" 2 281 "int8" `190 
F B "clear_pwm3_interrupt" 2 281 "void(int8 interrupt)" `189 
F N "pwm3_interrupt_active" 2 282 ""
V L "interrupt" 2 282 "int8" `192 
F B "pwm3_interrupt_active" 2 282 "int8(int8 interrupt)" `191 
F N "setup_pwm4" 2 283 ""
V L "mode" 2 283 "int16" `194 
F B "setup_pwm4" 2 283 "void(int16 mode)" `193 
F N "setup_pwm4" 2 284 ""
V L "mode" 2 284 "int16" `196 
V L "mode1" 2 284 "int32" `197 
F B "setup_pwm4" 2 284 "void(int16 mode,int32 mode1)" `195 
F N "set_pwm4_duty" 2 285 ""
V L "duty" 2 285 "int16" `199 
F B "set_pwm4_duty" 2 285 "void(int16 duty)" `198 
F N "set_pwm4_period" 2 286 ""
V L "period" 2 286 "int16" `201 
F B "set_pwm4_period" 2 286 "void(int16 period)" `200 
F N "set_pwm4_phase" 2 287 ""
V L "phase" 2 287 "int16" `203 
F B "set_pwm4_phase" 2 287 "void(int16 phase)" `202 
F N "set_pwm4_offset" 2 288 ""
V L "offset" 2 288 "int16" `205 
F B "set_pwm4_offset" 2 288 "void(int16 offset)" `204 
F N "enable_pwm4_interrupt" 2 289 ""
V L "interrupt" 2 289 "int8" `207 
F B "enable_pwm4_interrupt" 2 289 "void(int8 interrupt)" `206 
F N "disable_pwm4_interrupt" 2 290 ""
V L "interrupt" 2 290 "int8" `209 
F B "disable_pwm4_interrupt" 2 290 "void(int8 interrupt)" `208 
F N "clear_pwm4_interrupt" 2 291 ""
V L "interrupt" 2 291 "int8" `211 
F B "clear_pwm4_interrupt" 2 291 "void(int8 interrupt)" `210 
F N "pwm4_interrupt_active" 2 292 ""
V L "interrupt" 2 292 "int8" `213 
F B "pwm4_interrupt_active" 2 292 "int8(int8 interrupt)" `212  "Constants used for SETUP_PWMx() first parameter are:"
D G "PWM_DISABLE" 2 296 "0"
D G "PWM_ENABLE" 2 297 "1"
D G "PWM_CENTER_ALIGN" 2 301 "0x8C"
D G "PWM_TOGGLE_ON_MATCH" 2 302 "0x88"
D G "PWM_SET_ON_MATCH" 2 303 "0x84"
D G "PWM_STANDARD" 2 304 "0x80"
D G "PWM_CLK_FOSC" 2 306 "0"
D G "PWM_CLK_HFINTOSC" 2 307 "0x0100"
D G "PWM_CLK_LFINTOSC" 2 308 "0x0200"
D G "PWM_CLK_DIV_BY_1" 2 310 "0"
D G "PWM_CLK_DIV_BY_2" 2 311 "0x1000"
D G "PWM_CLK_DIV_BY_4" 2 312 "0x2000"
D G "PWM_CLK_DIV_BY_8" 2 313 "0x3000"
D G "PWM_CLK_DIV_BY_16" 2 314 "0x4000"
D G "PWM_CLK_DIV_BY_32" 2 315 "0x5000"
D G "PWM_CLK_DIV_BY_64" 2 316 "0x6000"
D G "PWM_CLK_DIV_BY_128" 2 317 "0x7000"
D G "PWM_INVERT" 2 319 "0x10"
D G "PWM_DISABLED" 2 323 "0"
D G "PWM_ENABLED" 2 324 "0x80"
D G "PWM_OFFSET_INT_ENABLED" 2 327 "0x08"
D G "PWM_PHASE_INT_ENABLED" 2 328 "0x04"
D G "PWM_DUTY_INT_ENABLED" 2 329 "0x02"
D G "PWM_PERIOD_INT_ENABLED" 2 330 "0x01"
D G "PWM_LOAD_BUFFERS_ON_TRIGGER" 2 331 "0x4000"
D G "PWM_LOAD_TRIGGER_LD1" 2 333 "0x0100"
D G "PWM_LOAD_TRIGGER_LD2" 2 334 "0x0200"
D G "PWM_LOAD_TRIGGER_LD3" 2 335 "0x0300"
D G "PWM_OFFSET_MODE_CONTINUOUS" 2 337 "0x600000"
D G "PWM_OFFSET_MODE_ONE_SHOT" 2 338 "0x400000"
D G "PWM_OFFSET_MODE_INDEPENDENT_SLAVE" 2 339 "0x200000"
D G "PWM_OFFSET_MODE_INDEPENDENT" 2 340 "0"
D G "PWM_OFFSET_MATCH_DECREMENTING" 2 342 "0x100000"
D G "PWM_OFFSET_MATCH_INCREMENTING" 2 343 "0"
D G "PWM_OFFSET_TRIGGER_OF4" 2 345 "0x030000"
D G "PWM_OFFSET_TRIGGER_OF3" 2 346 "0x020000"
D G "PWM_OFFSET_TRIGGER_OF2" 2 347 "0x010000"
D G "PWM_OFFSET_TRIGGER_OF1" 2 348 "0x000000"
D G "PWM_OFFSET_INTERRUPT" 2 351 "0x08"
D G "PWM_PHASE_INTERRUPT" 2 352 "0x04"
D G "PWM_DUTY_INTERRUPT" 2 353 "0x02"
D G "PWM_PERIOD_INTERRUPT" 2 354 "0x01"
c L "pwm4_interrupt_active" 2 3 2 "FUNCTION"
F N "setup_uart" 2 358 ""
V L "baud" 2 358 "int32" `215 
F B "setup_uart" 2 358 "void(int32 baud)" `214 
F N "setup_uart" 2 359 ""
V L "baud" 2 359 "int32" `217 
V L "stream" 2 359 "int8" `218 
F B "setup_uart" 2 359 "void(int32 baud,int8 stream)" `216 
F N "setup_uart" 2 360 ""
V L "baud" 2 360 "int32" `220 
V L "stream" 2 360 "int8" `221 
V L "clock" 2 360 "int32" `222 
F B "setup_uart" 2 360 "void(int32 baud,int8 stream,int32 clock)" `219 
F N "set_uart_speed" 2 361 ""
V L "baud" 2 361 "int32" `224 
F B "set_uart_speed" 2 361 "void(int32 baud)" `223 
F N "set_uart_speed" 2 362 ""
V L "baud" 2 362 "int32" `226 
V L "stream" 2 362 "int8" `227 
F B "set_uart_speed" 2 362 "void(int32 baud,int8 stream)" `225 
F N "set_uart_speed" 2 363 ""
V L "baud" 2 363 "int32" `229 
V L "stream" 2 363 "int8" `230 
V L "clock" 2 363 "int32" `231 
F B "set_uart_speed" 2 363 "void(int32 baud,int8 stream,int32 clock)" `228  "Constants used in setup_uart() are:"
D G "UART_ADDRESS" 2 367 "2"
D G "UART_DATA" 2 368 "4"
D G "UART_AUTODETECT" 2 369 "8"
D G "UART_AUTODETECT_NOWAIT" 2 370 "9"
D G "UART_WAKEUP_ON_RDA" 2 371 "10"
D G "UART_SEND_BREAK" 2 372 "13"
c L "set_uart_speed" 2 3 3 "FUNCTION"
F N "setup_comparator" 2 377 ""
V L "mode" 2 377 "int32" `233 
F B "setup_comparator" 2 377 "void(int32 mode)" `232  "Constants used in setup_comparator() are:"
D G "NC_NC_NC_NC" 2 380 "0x00"
D G "CP1_A1_A0" 2 383 "0x8000"
D G "CP1_C1_A0" 2 384 "0x8001"
D G "CP1_C2_A0" 2 385 "0x8002"
D G "CP1_C3_A0" 2 386 "0x8003"
D G "CP1_FVR_A0" 2 387 "0x8006"
D G "CP1_VSS_A0" 2 388 "0x8007"
D G "CP1_A1_DAC" 2 389 "0x8010"
D G "CP1_C1_DAC" 2 390 "0x8011"
D G "CP1_C2_DAC" 2 391 "0x8012"
D G "CP1_C3_DAC" 2 392 "0x8013"
D G "CP1_FVR_DAC" 2 393 "0x8016"
D G "CP1_VSS_DAC" 2 394 "0x8017"
D G "CP1_A1_FVR" 2 395 "0x8020"
D G "CP1_C1_FVR" 2 396 "0x8021"
D G "CP1_C2_FVR" 2 397 "0x8022"
D G "CP1_C3_FVR" 2 398 "0x8023"
D G "CP2_FVR_FVF" 2 399 "0x8026"
D G "CP1_VSS_FVR" 2 400 "0x8027"
D G "CP1_A1_VSS" 2 401 "0x8030"
D G "CP1_C1_VSS" 2 402 "0x8031"
D G "CP1_C2_VSS" 2 403 "0x8032"
D G "CP1_C3_VSS" 2 404 "0x8033"
D G "CP1_FVR_VSS" 2 405 "0x8036"
D G "CP1_VSS_VSS" 2 406 "0x8037"
D G "CP1_INT_L2H" 2 408 "0x0080"
D G "CP1_INT_H2L" 2 409 "0x0040"
D G "CP1_INVERT" 2 410 "0x1000"
D G "CP1_FAST" 2 411 "0x0400"
D G "CP1_HYST" 2 412 "0x0200"
D G "CP1_SYNC" 2 413 "0x0100"
D G "CP2_A1_C0" 2 416 "0x80000000"
D G "CP2_C1_C0" 2 417 "0x80010000"
D G "CP2_C2_C0" 2 418 "0x80020000"
D G "CP2_C3_C0" 2 419 "0x80030000"
D G "CP2_FVR_C0" 2 420 "0x80060000"
D G "CP2_VSS_C0" 2 421 "0x80070000"
D G "CP2_A1_DAC" 2 422 "0x80100000"
D G "CP2_C1_DAC" 2 423 "0x80110000"
D G "CP2_C2_DAC" 2 424 "0x80120000"
D G "CP2_C3_DAC" 2 425 "0x80130000"
D G "CP2_FVR_DAC" 2 426 "0x80140000"
D G "CP2_VSS_DAC" 2 427 "0x80170000"
D G "CP2_A1_FVR" 2 428 "0x80200000"
D G "CP2_C1_FVR" 2 429 "0x80210000"
D G "CP2_C2_FVR" 2 430 "0x80220000"
D G "CP2_C3_FVR" 2 431 "0x80230000"
D G "CP2_FVR_FVR" 2 432 "0x80240000"
D G "CP2_VSS_FVR" 2 433 "0x80270000"
D G "CP2_A1_VSS" 2 434 "0x80300000"
D G "CP2_C1_VSS" 2 435 "0x80310000"
D G "CP2_C2_VSS" 2 436 "0x80320000"
D G "CP2_C3_VSS" 2 437 "0x80330000"
D G "CP2_FVR_VSS" 2 438 "0x80340000"
D G "CP2_VSS_VSS" 2 439 "0x80370000"
D G "CP2_INT_L2H" 2 441 "0x00800000"
D G "CP2_INT_H2L" 2 442 "0x00400000"
D G "CP2_INVERT" 2 443 "0x10000000"
D G "CP2_FAST" 2 444 "0x04000000"
D G "CP2_HYST" 2 445 "0x02000000"
D G "CP2_SYNC" 2 446 "0x01000000"
c L "setup_comparator" 2 3 2 "FUNCTION"
F N "setup_vref" 2 453 ""
V L "mode" 2 453 "int8" `237 
F B "setup_vref" 2 453 "void(int8 mode)" `236  "Constants used in setup_vref() are:"
D G "VREF_OFF" 2 455 "0"
D G "VREF_ON" 2 456 "0x80"
D G "VREF_ADC_OFF" 2 458 "0"
D G "VREF_ADC_1v024" 2 459 "0x81"
D G "VREF_ADC_2v048" 2 460 "0x82"
D G "VREF_ADC_4v096" 2 461 "0x83"
D G "VREF_COMP_DAC_OFF" 2 463 "0"
D G "VREF_COMP_DAC_1v024" 2 464 "0x84"
D G "VREF_COMP_DAC_2v048" 2 465 "0x88"
D G "VREF_COMP_DAC_4v096" 2 466 "0x8C"
D G "TEMPERATURE_INDICATOR_DISABLED" 2 468 "0"
D G "TEMPERATURE_INDICATOR_ENABLED" 2 469 "0x20"
D G "TEMPERATURE_RANGE_LOW" 2 470 "0"
D G "TEMPERATURE_RANGE_HIGH" 2 471 "0x10"
c L "setup_vref" 2 3 3 "FUNCTION"
F N "setup_dac" 2 476 ""
V L "mode" 2 476 "int8" `239 
F B "setup_dac" 2 476 "void(int8 mode)" `238 
F N "dac_write" 2 477 ""
V L "value" 2 477 "int8" `241 
F B "dac_write" 2 477 "void(int8 value)" `240  "Constants used in SETUP_DAC() are:"
D G "DAC_OFF" 2 479 "0"
D G "DAC_VDD" 2 480 "0x80"
D G "DAC_VREF" 2 481 "0x81"
D G "DAC_FVR" 2 482 "0x82"
D G "DAC_OUTPUT" 2 484 "0x20"
c L "dac_write" 2 3 3 "FUNCTION"
F N "setup_cwg" 2 489 ""
V L "mode" 2 489 "int32" `243 
V L "shutdown" 2 489 "int16" `244 
V L "dt_rising" 2 489 "int8" `245 
V L "dt_falling" 2 489 "int8" `246 
F B "setup_cwg" 2 489 "void(int32 mode,int16 shutdown,int8 dt_rising,int8 dt_falling)" `242 
F N "cwg_restart" 2 490 ""
F B "cwg_restart" 2 490 "void()" `247 
F N "cwg_status" 2 491 ""
F B "cwg_status" 2 491 "int8()" `248  "Constants used in SETUP_CWG() first parameter are:"
D G "CWG_ENABLED" 2 493 "0x0080"
D G "CWG_DISABLED" 2 494 "0"
D G "CWG_A_INVERTED" 2 495 "0x0008"
D G "CWG_B_INVERTED" 2 496 "0x0010"
D G "CWG_CLOCK_HFINTOSC" 2 497 "0x0001"
D G "CWG_CLOCK_FOSC" 2 498 "0x0000"
D G "CWG_INPUT_C1OUT" 2 499 "0x0000"
D G "CWG_INPUT_C2OUT" 2 500 "0x0100"
D G "CWG_INPUT_PWM1" 2 501 "0x0200"
D G "CWG_INPUT_PWM2" 2 502 "0x0300"
D G "CWG_INPUT_PWM3" 2 503 "0x0400"
D G "CWG_INPUT_PWM4" 2 504 "0x0500"
D G "CWG_INPUT_CWGIN" 2 505 "0x0600"
D G "CWG_NO_AUTO_SHUTDOWN" 2 509 "0"
D G "CWG_SHUTDOWN_ON_CWGIN_HIGH" 2 510 "0x0002"
D G "CWG_SHUTDOWN_ON_COMP1" 2 511 "0x0004"
D G "CWG_SHUTDOWN_ON_COMP2" 2 512 "0x0008"
D G "CWG_AUTO_RESTART" 2 513 "0x0040"
D G "CWG_SHUTDOWN_A_INACTIVE_STATE" 2 515 "0"
D G "CWG_SHUTDOWN_A_TRISTATE" 2 516 "0x1000"
D G "CWG_SHUTDOWN_A_LOW" 2 517 "0x2000"
D G "CWG_SHUTDOWN_A_HIGH" 2 518 "0x3000"
D G "CWG_SHUTDOWN_B_INACTIVE_STATE" 2 520 "0"
D G "CWG_SHUTDOWN_B_TRISTATE" 2 521 "0x4000"
D G "CWG_SHUTDOWN_B_LOW" 2 522 "0x8000"
D G "CWG_SHUTDOWN_B_HIGH" 2 523 "0xC000"
D G "CWG_AUTO_SHUTDOWN" 2 526 "0x80"
c L "cwg_status" 2 3 2 "FUNCTION"
F N "setup_oscillator" 2 531 ""
V L "mode" 2 531 "int16" `250 
F B "setup_oscillator" 2 531 "int8(int16 mode)" `249 
F N "setup_oscillator" 2 532 ""
V L "mode" 2 532 "int16" `252 
V L "tune" 2 532 "sint8" `253 
F B "setup_oscillator" 2 532 "int8(int16 mode,sint8 tune)" `251  "Constants used in setup_oscillator() are:"
D G "OSC_31KHZ" 2 535 "0"
D G "OSC_31250_MF" 2 536 "0x10"
D G "OSC_31250" 2 537 "0x18"
D G "OSC_62500" 2 538 "0x20"
D G "OSC_125KHZ_MF" 2 539 "0x28"
D G "OSC_250KHZ_MF" 2 540 "0x30"
D G "OSC_500KHZ_MF" 2 541 "0x38"
D G "OSC_125KHZ" 2 542 "0x40"
D G "OSC_250KHZ" 2 543 "0x48"
D G "OSC_500KHZ" 2 544 "0x50"
D G "OSC_1MHZ" 2 545 "0x58"
D G "OSC_2MHZ" 2 546 "0x60"
D G "OSC_4MHZ" 2 547 "0x68"
D G "OSC_8MHZ" 2 548 "0x70"
D G "OSC_16MHZ" 2 549 "0x78"
D G "OSC_32MHZ" 2 550 "0xF0"
D G "OSC_INTRC" 2 552 "0x03"
D G "OSC_NORMAL" 2 553 "0"
D G "OSC_HFINTRC_STABLE" 2 557 "0x01"
D G "OSC_LFINTRC_READY" 2 558 "0x02"
D G "OSC_MFINTRC_READY" 2 559 "0x04"
D G "OSC_HFINTRC_LOCKED" 2 560 "0x08"
D G "OSC_HFINTRC_READY" 2 561 "0x10"
D G "OSC_RUNNING_FROM_FUSES" 2 562 "0x20" "Device is running from the clock defined by FOSC<2:0> of the CONFIG1 register"
D G "OSC_PLL_READY" 2 563 "0x40"
c L "setup_oscillator" 2 3 4 "FUNCTION"
F N "setup_adc" 2 570 ""
V L "mode" 2 570 "int16" `255 
F B "setup_adc" 2 570 "void(int16 mode)" `254 
F N "read_adc" 2 571 ""
F B "read_adc" 2 571 "int8()" `256 
F N "read_adc" 2 572 ""
V L "mode" 2 572 "int8" `258 
F B "read_adc" 2 572 "int8(int8 mode)" `257 
F N "read_adc" 2 573 ""
f G "read_adc" 2 573 "int16()" `259 
F N "read_adc" 2 574 ""
V L "mode" 2 574 "int8" `260 
f G "read_adc" 2 574 "int16(int8 mode,int32 pins)" `259 
F N "adc_done" 2 575 ""
F B "adc_done" 2 575 "int8(int8 mode,int32 pins)" `259  "Constants used for SETUP_ADC() are:"
D G "ADC_OFF" 2 577 "0" "ADC Off"
D G "ADC_CLOCK_DIV_2" 2 578 "0x100"
D G "ADC_CLOCK_DIV_4" 2 579 "0x40"
D G "ADC_CLOCK_DIV_8" 2 580 "0x10"
D G "ADC_CLOCK_DIV_32" 2 581 "0x20"
D G "ADC_CLOCK_DIV_16" 2 582 "0x50"
D G "ADC_CLOCK_DIV_64" 2 583 "0x60"
D G "ADC_CLOCK_INTERNAL" 2 584 "0x30" "Internal 2-6us"
c L "adc_done" 2 3 1 "FUNCTION"
F N "setup_adc_ports" 2 587 ""
V L "pins" 2 587 "int32" `261 
F B "setup_adc_ports" 2 587 "void(int32 pins)" `260 
F N "setup_adc_ports" 2 588 ""
V L "pins" 2 588 "int32" `263 
V L "reference" 2 588 "int32" `264 
F B "setup_adc_ports" 2 588 "void(int32 pins,int32 reference)" `262 
F N "set_analog_pins" 2 589 ""
V L "pin" 2 589 "int8" `266 
F B "set_analog_pins" 2 589 "void(int8 pin,*int8 _VA_LIST)" `265 
F N "setup_adc_reference" 2 590 ""
V L "reference" 2 590 "int32" `269 
F B "setup_adc_reference" 2 590 "void(int32 reference)" `268 
F N "set_adc_channel" 2 591 ""
V L "channel" 2 591 "int8" `271 
F B "set_adc_channel" 2 591 "void(int8 channel)" `270  "Constants used in SETUP_ADC_PORTS() are:"
D G "sAN0" 2 595 "0x00010000" "| A0"
D G "sAN1" 2 596 "0x00020000" "| A1"
D G "sAN2" 2 597 "0x00040000" "| A2"
D G "sAN3" 2 598 "0x00100000" "| A4"
D G "sAN4" 2 599 "0x00000100" "| C0"
D G "sAN5" 2 600 "0x00000200" "| C1"
D G "sAN6" 2 601 "0x00000400" "| C2"
D G "sAN7" 2 602 "0x00000800" "| C3"
D G "NO_ANALOGS" 2 603 "0" "None"
D G "ALL_ANALOG" 2 604 "0x00170F00" "A0 A1 A2 A4 C0 C1 C2 C3"
D G "VSS_VDD" 2 607 "0x00000000" "| Range 0-Vdd"
D G "VSS_VREF" 2 608 "0x02000000" "| Range 0-VrefH"
D G "VSS_FVR" 2 609 "0x03000000" "| Range 0-FVR"
D G "TEMPERATURE_INDICATOR" 2 613 "0x1D"
D G "DAC_CHANNEL" 2 614 "0x1E"
D G "FVR_CHANNEL" 2 615 "0x1F"
D G "ADC_START_AND_READ" 2 618 "7" "This is the default if nothing is specified"
D G "ADC_START_ONLY" 2 619 "1"
D G "ADC_READ_ONLY" 2 620 "6"
c L "set_adc_channel" 2 3 3 "FUNCTION"
F N "abs" 2 626 ""
V L "x" 2 626 "sint8" `273 
F B "abs" 2 626 "sint8(sint8 x)" `272 
F N "abs" 2 627 ""
V L "x" 2 627 "sint16" `275 
F B "abs" 2 627 "sint16(sint16 x)" `274 
F N "abs" 2 628 ""
V L "x" 2 628 "sint32" `277 
F B "abs" 2 628 "sint32(sint32 x)" `276 
F N "abs" 2 629 ""
V L "x" 2 629 "float" `279 
F B "abs" 2 629 "float(float x)" `278 
F N "_mul" 2 630 ""
V L "??65535" 2 630 "int8" `281 
V L "??65535" 2 630 "int8" `282 
F B "_mul" 2 630 "int16(int8 ,int8 )" `280 
F N "_mul" 2 631 ""
V L "??65535" 2 631 "sint8" `284 
V L "??65535" 2 631 "sint8" `285 
F B "_mul" 2 631 "sint16(sint8 ,sint8 )" `283 
F N "_mul" 2 632 ""
V L "??65535" 2 632 "int16" `287 
V L "??65535" 2 632 "int16" `288 
F B "_mul" 2 632 "int32(int16 ,int16 )" `286 
F N "_mul" 2 633 ""
V L "??65535" 2 633 "sint16" `290 
V L "??65535" 2 633 "sint16" `291 
F B "_mul" 2 633 "sint32(sint16 ,sint16 )" `289  "Memory Manipulation Prototypes:"
F N "read_bank" 2 636 ""
V L "bank" 2 636 "int8" `293 
V L "offset" 2 636 "int8" `294 
F B "read_bank" 2 636 "int8(int8 bank,int8 offset)" `292 
F N "write_bank" 2 637 ""
V L "bank" 2 637 "int8" `296 
V L "offset" 2 637 "int8" `297 
V L "value" 2 637 "int8" `298 
F B "write_bank" 2 637 "void(int8 bank,int8 offset,int8 value)" `295 
F N "strcpy" 2 638 ""
V L "dest" 2 638 "*int8" `300 
V L "src" 2 638 "*int8" `301 
F B "strcpy" 2 638 "void(*int8 dest,*int8 src)" `299 
F N "memset" 2 639 ""
V L "destination" 2 639 "*int8" `303 
V L "value" 2 639 "int8" `304 
V L "num" 2 639 "int16" `305 
F B "memset" 2 639 "void(*int8 destination,int8 value,int16 num)" `302 
F N "memcpy" 2 640 ""
V L "destination" 2 640 "*int8" `307 
V L "source" 2 640 "*int8" `308 
V L "num" 2 640 "int16" `309 
F B "memcpy" 2 640 "void(*int8 destination,*int8 source,int16 num)" `306  "String Prototypes:"
F N "toupper" 2 643 ""
V L "cvalue" 2 643 "int8" `311 
F B "toupper" 2 643 "int8(int8 cvalue)" `310 
F N "tolower" 2 644 ""
V L "cvalue" 2 644 "int8" `313 
F B "tolower" 2 644 "int8(int8 cvalue)" `312 
F N "sprintf" 2 645 ""
V L "string" 2 645 "*int8" `315 
V L "cstring" 2 645 "*int8" `316 
F B "sprintf" 2 645 "void(*int8 string,*int8 cstring,*int8 _VA_LIST)" `314  "Data Manipulators Prototypes:"
F N "shift_left" 2 648 ""
V L "address" 2 648 "*int8" `319 
V L "bytes" 2 648 "int8" `320 
V L "value" 2 648 "int8" `321 
F B "shift_left" 2 648 "int8(*int8 address,int8 bytes,int8 value)" `318 
F N "shift_right" 2 649 ""
V L "address" 2 649 "*int8" `323 
V L "bytes" 2 649 "int8" `324 
V L "value" 2 649 "int8" `325 
F B "shift_right" 2 649 "int8(*int8 address,int8 bytes,int8 value)" `322 
F N "rotate_left" 2 650 ""
V L "address" 2 650 "*int8" `327 
V L "bytes" 2 650 "int8" `328 
F B "rotate_left" 2 650 "void(*int8 address,int8 bytes)" `326 
F N "rotate_right" 2 651 ""
V L "address" 2 651 "*int8" `330 
V L "bytes" 2 651 "int8" `331 
F B "rotate_right" 2 651 "void(*int8 address,int8 bytes)" `329 
F N "swap" 2 652 ""
V L "value" 2 652 "int8" `333 
F B "swap" 2 652 "void(int8 value)" `332 
F N "make8" 2 653 ""
V L "var" 2 653 "int16" `335 
V L "offset" 2 653 "int8" `336 
F B "make8" 2 653 "int8(int16 var,int8 offset)" `334 
F N "make8" 2 654 ""
V L "var" 2 654 "int32" `338 
V L "offset" 2 654 "int8" `339 
F B "make8" 2 654 "int8(int32 var,int8 offset)" `337 
F N "make16" 2 655 ""
V L "varhigh" 2 655 "int8" `341 
V L "varlow" 2 655 "int8" `342 
F B "make16" 2 655 "int16(int8 varhigh,int8 varlow)" `340 
F N "make32" 2 656 ""
V L "var1" 2 656 "int16" `344 
F B "make32" 2 656 "int32(int16 var1)" `343 
F N "make32" 2 657 ""
V L "var1" 2 657 "int16" `346 
V L "var2" 2 657 "int16" `347 
F B "make32" 2 657 "int32(int16 var1,int16 var2)" `345 
F N "make32" 2 658 ""
V L "var1" 2 658 "int16" `349 
V L "var2" 2 658 "int8" `350 
F B "make32" 2 658 "int32(int16 var1,int8 var2)" `348 
F N "make32" 2 659 ""
V L "var1" 2 659 "int16" `352 
V L "var2" 2 659 "int8" `353 
V L "var3" 2 659 "int8" `354 
F B "make32" 2 659 "int32(int16 var1,int8 var2,int8 var3)" `351 
F N "make32" 2 660 ""
V L "var1" 2 660 "int8" `356 
F B "make32" 2 660 "int32(int8 var1)" `355 
F N "make32" 2 661 ""
V L "var1" 2 661 "int8" `358 
V L "var2" 2 661 "int8" `359 
F B "make32" 2 661 "int32(int8 var1,int8 var2)" `357 
F N "make32" 2 662 ""
V L "var1" 2 662 "int8" `361 
V L "var2" 2 662 "int8" `362 
V L "var3" 2 662 "int8" `363 
F B "make32" 2 662 "int32(int8 var1,int8 var2,int8 var3)" `360 
F N "make32" 2 663 ""
V L "var1" 2 663 "int8" `365 
V L "var2" 2 663 "int8" `366 
V L "var3" 2 663 "int8" `367 
V L "var4" 2 663 "int8" `368 
F B "make32" 2 663 "int32(int8 var1,int8 var2,int8 var3,int8 var4)" `364 
F N "make32" 2 664 ""
V L "var1" 2 664 "int8" `370 
V L "var2" 2 664 "int16" `371 
F B "make32" 2 664 "int32(int8 var1,int16 var2)" `369 
F N "make32" 2 665 ""
V L "var1" 2 665 "int8" `373 
V L "var2" 2 665 "int16" `374 
V L "var3" 2 665 "int8" `375 
F B "make32" 2 665 "int32(int8 var1,int16 var2,int8 var3)" `372 
F N "make32" 2 666 ""
V L "var1" 2 666 "int8" `377 
V L "var2" 2 666 "int8" `378 
V L "var3" 2 666 "int16" `379 
F B "make32" 2 666 "int32(int8 var1,int8 var2,int16 var3)" `376 
F N "bit_set" 2 667 ""
V L "var" 2 667 "int8" `381 
V L "bit" 2 667 "int8" `382 
F B "bit_set" 2 667 "void(int8 var,int8 bit)" `380 
F N "bit_set" 2 668 ""
V L "var" 2 668 "int16" `384 
V L "bit" 2 668 "int8" `385 
F B "bit_set" 2 668 "void(int16 var,int8 bit)" `383 
F N "bit_set" 2 669 ""
V L "var" 2 669 "int32" `387 
V L "bit" 2 669 "int8" `388 
F B "bit_set" 2 669 "void(int32 var,int8 bit)" `386 
F N "bit_clear" 2 670 ""
V L "var" 2 670 "int8" `390 
V L "bit" 2 670 "int8" `391 
F B "bit_clear" 2 670 "void(int8 var,int8 bit)" `389 
F N "bit_clear" 2 671 ""
V L "var" 2 671 "int16" `393 
V L "bit" 2 671 "int8" `394 
F B "bit_clear" 2 671 "void(int16 var,int8 bit)" `392 
F N "bit_clear" 2 672 ""
V L "var" 2 672 "int32" `396 
V L "bit" 2 672 "int8" `397 
F B "bit_clear" 2 672 "void(int32 var,int8 bit)" `395 
F N "bit_test" 2 673 ""
V L "var" 2 673 "int8" `399 
V L "bit" 2 673 "int8" `400 
F B "bit_test" 2 673 "int8(int8 var,int8 bit)" `398 
F N "bit_test" 2 674 ""
V L "var" 2 674 "int16" `402 
V L "bit" 2 674 "int8" `403 
F B "bit_test" 2 674 "int8(int16 var,int8 bit)" `401 
F N "bit_test" 2 675 ""
V L "var" 2 675 "int32" `405 
V L "bit" 2 675 "int8" `406 
F B "bit_test" 2 675 "int8(int32 var,int8 bit)" `404  "#use delay() Prototypes:"
F N "delay_cycles" 2 678 ""
V L "count" 2 678 "int8" `408 
F B "delay_cycles" 2 678 "void(int8 count)" `407 
F N "delay_ms" 2 679 ""
V L "time" 2 679 "int16" `410 
F B "delay_ms" 2 679 "void(int16 time)" `409 
F N "delay_us" 2 680 ""
V L "time" 2 680 "int16" `412 
F B "delay_us" 2 680 "void(int16 time)" `411  "#use rs232() Prototypes:"
F N "putchar" 2 683 ""
V L "cdata" 2 683 "int8" `414 
F B "putchar" 2 683 "void(int8 cdata)" `413 
F N "putchar" 2 684 ""
V L "cdata" 2 684 "int8" `416 
V L "stream" 2 684 "int8" `417 
F B "putchar" 2 684 "void(int8 cdata,int8 stream)" `415 
F N "puts" 2 685 ""
V L "string" 2 685 "*int8" `419 
F B "puts" 2 685 "void(*int8 string)" `418 
F N "puts" 2 686 ""
V L "string" 2 686 "*int8" `421 
V L "stream" 2 686 "int8" `422 
F B "puts" 2 686 "void(*int8 string,int8 stream)" `420 
F N "getch" 2 687 ""
F B "getch" 2 687 "int8()" `423 
F N "getch" 2 688 ""
V L "stream" 2 688 "int8" `425 
F B "getch" 2 688 "int8(int8 stream)" `424 
F N "gets" 2 689 ""
V L "string" 2 689 "*int8" `427 
F B "gets" 2 689 "void(*int8 string)" `426 
F N "gets" 2 690 ""
V L "string" 2 690 "*int8" `429 
V L "stream" 2 690 "int8" `430 
F B "gets" 2 690 "void(*int8 string,int8 stream)" `428 
F N "kbhit" 2 691 ""
F B "kbhit" 2 691 "int8()" `431 
F N "kbhit" 2 692 ""
V L "stream" 2 692 "int8" `433 
F B "kbhit" 2 692 "int8(int8 stream)" `432 
F N "printf" 2 693 ""
V L "string" 2 693 "*int8" `435 
F B "printf" 2 693 "void(*int8 string,*int8 _VA_LIST)" `434 
F N "fprintf" 2 694 ""
V L "stream" 2 694 "int8" `438 
V L "string" 2 694 "*int8" `439 
F B "fprintf" 2 694 "void(int8 stream,*int8 string,*int8 _VA_LIST)" `437 
F N "putc_send" 2 695 ""
F B "putc_send" 2 695 "void()" `441 
F N "fputc_send" 2 696 ""
V L "stream" 2 696 "int8" `443 
F B "fputc_send" 2 696 "void(int8 stream)" `442 
F N "rcv_buffer_full" 2 697 ""
F B "rcv_buffer_full" 2 697 "int8()" `444 
F N "rcv_buffer_full" 2 698 ""
V L "stream" 2 698 "int8" `446 
F B "rcv_buffer_full" 2 698 "int8(int8 stream)" `445 
F N "rcv_buffer_bytes" 2 699 ""
F B "rcv_buffer_bytes" 2 699 "int16()" `447 
F N "rcv_buffer_bytes" 2 700 ""
V L "stream" 2 700 "int8" `449 
F B "rcv_buffer_bytes" 2 700 "int16(int8 stream)" `448 
F N "tx_buffer_full" 2 701 ""
F B "tx_buffer_full" 2 701 "int8()" `450 
F N "tx_buffer_full" 2 702 ""
V L "stream" 2 702 "int8" `452 
F B "tx_buffer_full" 2 702 "int8(int8 stream)" `451 
F N "tx_buffer_bytes" 2 703 ""
F B "tx_buffer_bytes" 2 703 "int16()" `453 
F N "tx_buffer_bytes" 2 704 ""
V L "stream" 2 704 "int8" `455 
F B "tx_buffer_bytes" 2 704 "int16(int8 stream)" `454 
F N "linbus_header" 2 705 ""
V L "identifier" 2 705 "int8" `457 
F B "linbus_header" 2 705 "int8(int8 identifier)" `456 
F N "linbus_header" 2 706 ""
V L "stream" 2 706 "int8" `459 
V L "identifier" 2 706 "int8" `460 
F B "linbus_header" 2 706 "int8(int8 stream,int8 identifier)" `458 
F N "linbus_header_hit" 2 707 ""
F B "linbus_header_hit" 2 707 "int8()" `461 
F N "linbus_header_hit" 2 708 ""
V L "stream" 2 708 "int8" `463 
F B "linbus_header_hit" 2 708 "int8(int8 stream)" `462 
F N "linbus_header_get" 2 709 ""
F B "linbus_header_get" 2 709 "int8()" `464 
F N "linbus_header_get" 2 710 ""
V L "stream" 2 710 "int8" `466 
F B "linbus_header_get" 2 710 "int8(int8 stream)" `465 
F N "linbus_rx_response" 2 711 ""
V L "DataPtr" 2 711 "*int8" `468 
V L "count" 2 711 "int8" `469 
F B "linbus_rx_response" 2 711 "int8(*int8 DataPtr,int8 count)" `467 
F N "linbus_rx_response" 2 712 ""
V L "stream" 2 712 "int8" `471 
V L "DataPtr" 2 712 "*int8" `472 
V L "count" 2 712 "int8" `473 
F B "linbus_rx_response" 2 712 "int8(int8 stream,*int8 DataPtr,int8 count)" `470 
F N "linbus_tx_response" 2 713 ""
V L "DataPtr" 2 713 "*int8" `475 
V L "count" 2 713 "int8" `476 
F B "linbus_tx_response" 2 713 "void(*int8 DataPtr,int8 count)" `474 
F N "linbus_tx_response" 2 714 ""
V L "stream" 2 714 "int8" `478 
V L "DataPtr" 2 714 "*int8" `479 
V L "count" 2 714 "int8" `480 
F B "linbus_tx_response" 2 714 "void(int8 stream,*int8 DataPtr,int8 count)" `477 
F N "linbus_checksum_type" 2 715 ""
V L "type" 2 715 "int8" `482 
F B "linbus_checksum_type" 2 715 "void(int8 type)" `481 
F N "linbus_checksum_type" 2 716 ""
V L "stream" 2 716 "int8" `484 
V L "type" 2 716 "int8" `485 
F B "linbus_checksum_type" 2 716 "void(int8 stream,int8 type)" `483  "#use i2c() Prototypes:"
F N "i2c_read" 2 719 ""
F B "i2c_read" 2 719 "int8()" `486 
F N "i2c_read" 2 720 ""
V L "ack" 2 720 "int8" `488 
F B "i2c_read" 2 720 "int8(int8 ack)" `487 
F N "i2c_read" 2 721 ""
V L "stream" 2 721 "int8" `490 
V L "ack" 2 721 "int8" `491 
F B "i2c_read" 2 721 "int8(int8 stream,int8 ack)" `489 
F N "i2c_write" 2 722 ""
V L "data" 2 722 "int8" `493 
F B "i2c_write" 2 722 "int8(int8 data)" `492 
F N "i2c_write" 2 723 ""
V L "stream" 2 723 "int8" `495 
V L "data" 2 723 "int8" `496 
F B "i2c_write" 2 723 "int8(int8 stream,int8 data)" `494 
F N "i2c_start" 2 724 ""
F B "i2c_start" 2 724 "void()" `497 
F N "i2c_start" 2 725 ""
V L "stream" 2 725 "int8" `499 
F B "i2c_start" 2 725 "void(int8 stream)" `498 
F N "i2c_start" 2 726 ""
V L "stream" 2 726 "int8" `501 
V L "restart" 2 726 "int8" `502 
F B "i2c_start" 2 726 "void(int8 stream,int8 restart)" `500 
F N "i2c_stop" 2 727 ""
F B "i2c_stop" 2 727 "void()" `503 
F N "i2c_stop" 2 728 ""
V L "stream" 2 728 "int8" `505 
F B "i2c_stop" 2 728 "void(int8 stream)" `504 
F N "i2c_isr_state" 2 729 ""
F B "i2c_isr_state" 2 729 "int8()" `506 
F N "i2c_slaveaddr" 2 730 ""
V L "addr" 2 730 "int8" `508 
F B "i2c_slaveaddr" 2 730 "void(int8 addr)" `507 
F N "i2c_slaveaddr" 2 731 ""
V L "stream" 2 731 "int8" `510 
V L "addr" 2 731 "int8" `511 
F B "i2c_slaveaddr" 2 731 "void(int8 stream,int8 addr)" `509 
F N "i2c_poll" 2 732 ""
F B "i2c_poll" 2 732 "int8()" `512 
F N "i2c_poll" 2 733 ""
V L "stream" 2 733 "int8" `514 
F B "i2c_poll" 2 733 "int8(int8 stream)" `513 
F N "i2c_init" 2 734 ""
V L "baud" 2 734 "int32" `516 
F B "i2c_init" 2 734 "void(int32 baud)" `515 
F N "i2c_init" 2 735 ""
V L "stream" 2 735 "int8" `518 
V L "baud" 2 735 "int32" `519 
F B "i2c_init" 2 735 "void(int8 stream,int32 baud)" `517 
F N "i2c_transfer" 2 736 ""
V L "address" 2 736 "int8" `521 
V L "wData" 2 736 "*int8" `522 
V L "wCount" 2 736 "int8" `523 
F B "i2c_transfer" 2 736 "int8(int8 address,*int8 wData,int8 wCount)" `520 
F N "i2c_transfer" 2 737 ""
V L "address" 2 737 "int8" `525 
V L "wData" 2 737 "*int8" `526 
V L "wCount" 2 737 "int8" `527 
V L "rData" 2 737 "*int8" `528 
V L "rCount" 2 737 "*int8" `529 
F B "i2c_transfer" 2 737 "int8(int8 address,*int8 wData,int8 wCount,*int8 rData,*int8 rCount)" `524 
F N "i2c_transfer" 2 738 ""
V L "stream" 2 738 "int8" `531 
V L "address" 2 738 "int8" `532 
V L "wData" 2 738 "*int8" `533 
V L "wCount" 2 738 "int8" `534 
F B "i2c_transfer" 2 738 "int8(int8 stream,int8 address,*int8 wData,int8 wCount)" `530 
F N "i2c_transfer" 2 739 ""
V L "stream" 2 739 "int8" `536 
V L "address" 2 739 "int8" `537 
V L "wData" 2 739 "*int8" `538 
V L "wCount" 2 739 "int8" `539 
V L "rData" 2 739 "*int8" `540 
V L "rCount" 2 739 "*int8" `541 
F B "i2c_transfer" 2 739 "int8(int8 stream,int8 address,*int8 wData,int8 wCount,*int8 rData,*int8 rCount)" `535 
F N "i2c_transfer_out" 2 740 ""
V L "address" 2 740 "int8" `543 
V L "wData" 2 740 "*int8" `544 
V L "wCount" 2 740 "int8" `545 
F B "i2c_transfer_out" 2 740 "int8(int8 address,*int8 wData,int8 wCount)" `542 
F N "i2c_transfer_out" 2 741 ""
V L "stream" 2 741 "int8" `547 
V L "address" 2 741 "int8" `548 
V L "wData" 2 741 "*int8" `549 
V L "wCount" 2 741 "int8" `550 
F B "i2c_transfer_out" 2 741 "int8(int8 stream,int8 address,*int8 wData,int8 wCount)" `546 
F N "i2c_transfer_in" 2 742 ""
V L "address" 2 742 "int8" `552 
V L "rData" 2 742 "*int8" `553 
V L "rCount" 2 742 "int8" `554 
F B "i2c_transfer_in" 2 742 "int8(int8 address,*int8 rData,int8 rCount)" `551 
F N "i2c_transfer_in" 2 743 ""
V L "stream" 2 743 "int8" `556 
V L "address" 2 743 "int8" `557 
V L "rData" 2 743 "*int8" `558 
V L "rCount" 2 743 "int8" `559 
F B "i2c_transfer_in" 2 743 "int8(int8 stream,int8 address,*int8 rData,int8 rCount)" `555  "#use spi() Prototypes:"
F N "spi_xfer" 2 746 ""
F B "spi_xfer" 2 746 "int8()" `560 
F N "spi_xfer" 2 747 ""
f G "spi_xfer" 2 747 "int16(int8 data)" `561 
F N "spi_xfer" 2 748 ""
f G "spi_xfer" 2 748 "int32(int8 data)" `561 
F N "spi_xfer" 2 749 ""
V L "data" 2 749 "int8" `562 
F B "spi_xfer" 2 749 "int8(int8 data)" `561 
F N "spi_xfer" 2 750 ""
V L "data" 2 750 "int16" `564 
F B "spi_xfer" 2 750 "int16(int16 data)" `563 
F N "spi_xfer" 2 751 ""
V L "data" 2 751 "int32" `566 
F B "spi_xfer" 2 751 "int32(int32 data)" `565 
F N "spi_xfer" 2 752 ""
V L "stream" 2 752 "int8" `568 
V L "data" 2 752 "int8" `569 
F B "spi_xfer" 2 752 "int8(int8 stream,int8 data)" `567 
F N "spi_xfer" 2 753 ""
V L "stream" 2 753 "int8" `571 
V L "data" 2 753 "int16" `572 
F B "spi_xfer" 2 753 "int16(int8 stream,int16 data)" `570 
F N "spi_xfer" 2 754 ""
V L "stream" 2 754 "int8" `574 
V L "data" 2 754 "int32" `575 
F B "spi_xfer" 2 754 "int32(int8 stream,int32 data)" `573 
F N "spi_xfer" 2 755 ""
V L "stream" 2 755 "int8" `577 
V L "data" 2 755 "int8" `578 
V L "bits" 2 755 "int8" `579 
F B "spi_xfer" 2 755 "int8(int8 stream,int8 data,int8 bits)" `576 
F N "spi_xfer" 2 756 ""
V L "stream" 2 756 "int8" `581 
V L "data" 2 756 "int16" `582 
V L "bits" 2 756 "int8" `583 
F B "spi_xfer" 2 756 "int16(int8 stream,int16 data,int8 bits)" `580 
F N "spi_xfer" 2 757 ""
V L "stream" 2 757 "int8" `585 
V L "data" 2 757 "int32" `586 
V L "bits" 2 757 "int8" `587 
F B "spi_xfer" 2 757 "int32(int8 stream,int32 data,int8 bits)" `584 
F N "spi_init" 2 758 ""
V L "baud" 2 758 "int32" `589 
F B "spi_init" 2 758 "void(int32 baud)" `588 
F N "spi_init" 2 759 ""
V L "stream" 2 759 "int8" `591 
V L "baud" 2 759 "int32" `592 
F B "spi_init" 2 759 "void(int8 stream,int32 baud)" `590 
F N "spi_speed" 2 760 ""
V L "baud" 2 760 "int32" `594 
F B "spi_speed" 2 760 "void(int32 baud)" `593 
F N "spi_speed" 2 761 ""
V L "stream" 2 761 "int8" `596 
V L "baud" 2 761 "int32" `597 
F B "spi_speed" 2 761 "void(int8 stream,int32 baud)" `595 
F N "spi_speed" 2 762 ""
V L "stream" 2 762 "int8" `599 
V L "baud" 2 762 "int32" `600 
V L "clock" 2 762 "int32" `601 
F B "spi_speed" 2 762 "void(int8 stream,int32 baud,int32 clock)" `598 
F N "spi_prewrite" 2 763 ""
V L "data" 2 763 "int8" `603 
F B "spi_prewrite" 2 763 "void(int8 data)" `602 
F N "spi_prewrite" 2 764 ""
V L "data" 2 764 "int16" `605 
F B "spi_prewrite" 2 764 "void(int16 data)" `604 
F N "spi_prewrite" 2 765 ""
V L "data" 2 765 "int32" `607 
F B "spi_prewrite" 2 765 "void(int32 data)" `606 
F N "spi_prewrite" 2 766 ""
V L "??65535" 2 766 "int8" `609 
V L "data" 2 766 "int8" `610 
F B "spi_prewrite" 2 766 "void(int8 ,int8 data)" `608 
F N "spi_prewrite" 2 767 ""
V L "??65535" 2 767 "int8" `612 
V L "data" 2 767 "int16" `613 
F B "spi_prewrite" 2 767 "void(int8 ,int16 data)" `611 
F N "spi_prewrite" 2 768 ""
V L "??65535" 2 768 "int8" `615 
V L "data" 2 768 "int32" `616 
F B "spi_prewrite" 2 768 "void(int8 ,int32 data)" `614 
F N "spi_xfer_in" 2 769 ""
F B "spi_xfer_in" 2 769 "int8()" `617 
F N "spi_xfer_in" 2 770 ""
f G "spi_xfer_in" 2 770 "int16(int8 bits)" `618 
F N "spi_xfer_in" 2 771 ""
f G "spi_xfer_in" 2 771 "int32(int8 bits)" `618 
F N "spi_xfer_in" 2 772 ""
V L "bits" 2 772 "int8" `619 
F B "spi_xfer_in" 2 772 "int8(int8 bits)" `618 
F N "spi_xfer_in" 2 773 ""
V L "bits" 2 773 "int8" `621 
f G "spi_xfer_in" 2 773 "int16(int8 bits,int8 bits)" `620 
F N "spi_xfer_in" 2 774 ""
V L "bits" 2 774 "int8" `621 
f G "spi_xfer_in" 2 774 "int32(int8 bits,int8 bits)" `620 
F N "spi_xfer_in" 2 775 ""
V L "stream" 2 775 "int8" `621 
V L "bits" 2 775 "int8" `622 
F B "spi_xfer_in" 2 775 "int8(int8 stream,int8 bits)" `620 
F N "spi_xfer_in" 2 776 ""
V L "stream" 2 776 "int8" `621 
V L "bits" 2 776 "int8" `625 
f G "spi_xfer_in" 2 776 "int16(int8 stream,int8 bits,int16 count)" `623 
F N "spi_xfer_in" 2 777 ""
V L "stream" 2 777 "int8" `621 
V L "bits" 2 777 "int8" `625 
f G "spi_xfer_in" 2 777 "int32(int8 stream,int8 bits,int16 count)" `623 
F N "spi_transfer" 2 778 ""
V L "wData" 2 778 "*int8" `624 
V L "rData" 2 778 "*int8" `625 
V L "count" 2 778 "int16" `626 
F B "spi_transfer" 2 778 "void(*int8 wData,*int8 rData,int16 count)" `623 
F N "spi_transfer" 2 779 ""
V L "stream" 2 779 "int8" `628 
V L "wData" 2 779 "*int8" `629 
V L "rData" 2 779 "*int8" `630 
V L "count" 2 779 "int16" `631 
F B "spi_transfer" 2 779 "void(int8 stream,*int8 wData,*int8 rData,int16 count)" `627 
F N "spi_transfer_write" 2 780 ""
V L "wData" 2 780 "*int8" `633 
V L "count" 2 780 "int16" `634 
F B "spi_transfer_write" 2 780 "void(*int8 wData,int16 count)" `632 
F N "spi_transfer_write" 2 781 ""
V L "stream" 2 781 "int8" `636 
V L "wData" 2 781 "*int8" `637 
V L "count" 2 781 "int16" `638 
F B "spi_transfer_write" 2 781 "void(int8 stream,*int8 wData,int16 count)" `635 
F N "spi_transfer_read" 2 782 ""
V L "rData" 2 782 "*int8" `640 
V L "count" 2 782 "int16" `641 
F B "spi_transfer_read" 2 782 "void(*int8 rData,int16 count)" `639 
F N "spi_transfer_read" 2 783 ""
V L "stream" 2 783 "int8" `643 
V L "rData" 2 783 "*int8" `644 
V L "count" 2 783 "int16" `645 
F B "spi_transfer_read" 2 783 "void(int8 stream,*int8 rData,int16 count)" `642  "#use rtos() Prototypes:"
F N "rtos_run" 2 786 ""
F B "rtos_run" 2 786 "void()" `646 
F N "rtos_yield" 2 787 ""
F B "rtos_yield" 2 787 "void()" `647 
F N "rtos_enable" 2 788 ""
V L "task" 2 788 "int8" `649 
F B "rtos_enable" 2 788 "void(int8 task)" `648 
F N "rtos_disable" 2 789 ""
V L "task" 2 789 "int8" `651 
F B "rtos_disable" 2 789 "void(int8 task)" `650 
F N "rtos_terminate" 2 790 ""
F B "rtos_terminate" 2 790 "void()" `652 
F N "rtos_await" 2 791 ""
V L "flag" 2 791 "int8" `654 
F B "rtos_await" 2 791 "void(int8 flag)" `653 
F N "rtos_wait" 2 792 ""
V L "sem" 2 792 "int8" `656 
F B "rtos_wait" 2 792 "void(int8 sem)" `655 
F N "rtos_signal" 2 793 ""
V L "sem" 2 793 "int8" `658 
F B "rtos_signal" 2 793 "void(int8 sem)" `657 
F N "rtos_msg_send" 2 794 ""
V L "task" 2 794 "int8" `660 
V L "msg" 2 794 "int8" `661 
F B "rtos_msg_send" 2 794 "void(int8 task,int8 msg)" `659 
F N "rtos_msg_read" 2 795 ""
F B "rtos_msg_read" 2 795 "int8()" `662 
F N "rtos_msg_poll" 2 796 ""
F B "rtos_msg_poll" 2 796 "int8()" `663 
F N "rtos_overrun" 2 797 ""
V L "task" 2 797 "int8" `665 
F B "rtos_overrun" 2 797 "int8(int8 task)" `664 
F N "rtos_stats" 2 798 ""
V L "task" 2 798 "int8" `667 
V L "stat" 2 798 "*int8" `668 
F B "rtos_stats" 2 798 "void(int8 task,*int8 stat)" `666  "#use timer() Prototypes:"
F N "get_ticks" 2 801 ""
F B "get_ticks" 2 801 "int8()" `669 
F N "get_ticks" 2 802 ""
f G "get_ticks" 2 802 "int16(int8 stream)" `670 
F N "get_ticks" 2 803 ""
f G "get_ticks" 2 803 "int32(int8 stream)" `670 
F N "get_ticks" 2 804 ""
V L "stream" 2 804 "int8" `671 
F B "get_ticks" 2 804 "int8(int8 stream)" `670 
F N "get_ticks" 2 805 ""
V L "stream" 2 805 "int8" `673 
f G "get_ticks" 2 805 "int16(int8 stream)" `672 
F N "get_ticks" 2 806 ""
V L "stream" 2 806 "int8" `673 
f G "get_ticks" 2 806 "int32(int8 stream)" `672 
F N "set_ticks" 2 807 ""
V L "value" 2 807 "int8" `673 
F B "set_ticks" 2 807 "void(int8 value)" `672 
F N "set_ticks" 2 808 ""
V L "value" 2 808 "int16" `675 
F B "set_ticks" 2 808 "void(int16 value)" `674 
F N "set_ticks" 2 809 ""
V L "value" 2 809 "int32" `677 
F B "set_ticks" 2 809 "void(int32 value)" `676 
F N "set_ticks" 2 810 ""
V L "stream" 2 810 "int8" `679 
V L "value" 2 810 "int8" `680 
F B "set_ticks" 2 810 "void(int8 stream,int8 value)" `678 
F N "set_ticks" 2 811 ""
V L "stream" 2 811 "int8" `682 
V L "value" 2 811 "int16" `683 
F B "set_ticks" 2 811 "void(int8 stream,int16 value)" `681 
F N "set_ticks" 2 812 ""
V L "stream" 2 812 "int8" `685 
V L "value" 2 812 "int32" `686 
F B "set_ticks" 2 812 "void(int8 stream,int32 value)" `684  "#use pwm() Prototypes:"
F N "pwm_on" 2 815 ""
F B "pwm_on" 2 815 "void()" `687 
F N "pwm_on" 2 816 ""
V L "stream" 2 816 "int8" `689 
F B "pwm_on" 2 816 "void(int8 stream)" `688 
F N "pwm_off" 2 817 ""
F B "pwm_off" 2 817 "void()" `690 
F N "pwm_off" 2 818 ""
V L "stream" 2 818 "int8" `692 
F B "pwm_off" 2 818 "void(int8 stream)" `691 
F N "pwm_set_duty" 2 819 ""
V L "duty" 2 819 "int16" `694 
F B "pwm_set_duty" 2 819 "void(int16 duty)" `693 
F N "pwm_set_duty" 2 820 ""
V L "stream" 2 820 "int8" `696 
V L "duty" 2 820 "int16" `697 
F B "pwm_set_duty" 2 820 "void(int8 stream,int16 duty)" `695 
F N "pwm_set_duty_percent" 2 821 ""
V L "percent" 2 821 "int16" `699 
F B "pwm_set_duty_percent" 2 821 "void(int16 percent)" `698 
F N "pwm_set_duty_percent" 2 822 ""
V L "stream" 2 822 "int8" `701 
V L "percent" 2 822 "int16" `702 
F B "pwm_set_duty_percent" 2 822 "void(int8 stream,int16 percent)" `700 
F N "pwm_set_frequency" 2 823 ""
V L "frequency" 2 823 "int32" `704 
F B "pwm_set_frequency" 2 823 "void(int32 frequency)" `703 
F N "pwm_set_frequency" 2 824 ""
V L "stream" 2 824 "int8" `706 
V L "frequency" 2 824 "int32" `707 
F B "pwm_set_frequency" 2 824 "void(int8 stream,int32 frequency)" `705 
F N "pwm_get_duty_period" 2 825 ""
F B "pwm_get_duty_period" 2 825 "int16()" `708 
F N "pwm_get_duty_period" 2 826 ""
V L "stream" 2 826 "int8" `710 
F B "pwm_get_duty_period" 2 826 "int16(int8 stream)" `709  "#use capture() Prototypes:"
F N "get_capture_time" 2 829 ""
F B "get_capture_time" 2 829 "int16()" `711 
F N "get_capture_time" 2 830 ""
V L "stream" 2 830 "int8" `713 
F B "get_capture_time" 2 830 "int16(int8 stream)" `712 
F N "get_capture_event" 2 831 ""
F B "get_capture_event" 2 831 "int8()" `714 
F N "get_capture_event" 2 832 ""
V L "stream" 2 832 "int8" `716 
F B "get_capture_event" 2 832 "int8(int8 stream)" `715  "Enviroment Prototypes:"
c L "get_capture_event" 2 3 2 "FUNCTION"
F N "goto_address" 2 845 ""
V L "address" 2 845 "int16" `718 
F B "goto_address" 2 845 "void(int16 address)" `717 
F N "label_address" 2 846 ""
V L "label" 2 846 "int16" `720 
F B "label_address" 2 846 "int16(int16 label)" `719  "Program Memory Read Prototypes:"
F N "read_program_memory" 2 849 ""
V L "address" 2 849 "int16" `722 
V L "DataPtr" 2 849 "*int8" `723 
V L "count" 2 849 "int16" `724 
F B "read_program_memory" 2 849 "void(int16 address,*int8 DataPtr,int16 count)" `721 
F N "read_program_eeprom" 2 850 ""
V L "address" 2 850 "int16" `726 
F B "read_program_eeprom" 2 850 "int16(int16 address)" `725 
F N "read_configuration_memory" 2 851 ""
V L "DataPtr" 2 851 "*int8" `728 
V L "count" 2 851 "int8" `729 
F B "read_configuration_memory" 2 851 "void(*int8 DataPtr,int8 count)" `727 
F N "read_configuration_memory" 2 852 ""
V L "offset" 2 852 "int8" `731 
V L "DataPtr" 2 852 "*int8" `732 
V L "count" 2 852 "int8" `733 
F B "read_configuration_memory" 2 852 "void(int8 offset,*int8 DataPtr,int8 count)" `730  "Program Memory Write Prototypes:"
F N "write_program_memory" 2 855 ""
V L "address" 2 855 "int16" `735 
V L "DataPtr" 2 855 "*int8" `736 
V L "count" 2 855 "int16" `737 
F B "write_program_memory" 2 855 "void(int16 address,*int8 DataPtr,int16 count)" `734 
F N "write_program_eeprom" 2 856 ""
V L "address" 2 856 "int16" `739 
V L "data" 2 856 "int16" `740 
F B "write_program_eeprom" 2 856 "void(int16 address,int16 data)" `738 
F N "write_configuration_memory" 2 857 ""
V L "DataPtr" 2 857 "*int8" `742 
V L "count" 2 857 "int8" `743 
F B "write_configuration_memory" 2 857 "void(*int8 DataPtr,int8 count)" `741 
F N "write_configuration_memory" 2 858 ""
V L "offset" 2 858 "int8" `745 
V L "DataPtr" 2 858 "*int8" `746 
V L "count" 2 858 "int8" `747 
F B "write_configuration_memory" 2 858 "void(int8 offset,*int8 DataPtr,int8 count)" `744  "INT"
c L "write_configuration_memory" 2 3 4 "FUNCTION"
F N "enable_interrupts" 2 865 ""
V L "interrupt" 2 865 "int32" `749 
F B "enable_interrupts" 2 865 "void(int32 interrupt)" `748 
F N "disable_interrupts" 2 866 ""
V L "interrupt" 2 866 "int32" `751 
F B "disable_interrupts" 2 866 "void(int32 interrupt)" `750 
F N "clear_interrupt" 2 867 ""
V L "interrupt" 2 867 "int32" `753 
F B "clear_interrupt" 2 867 "void(int32 interrupt)" `752 
F N "interrupt_active" 2 868 ""
V L "interrupt" 2 868 "int32" `755 
F B "interrupt_active" 2 868 "int8(int32 interrupt)" `754 
F N "interrupt_enabled" 2 869 ""
V L "interrupt" 2 869 "int32" `757 
F B "interrupt_enabled" 2 869 "int8(int32 interrupt)" `756 
F N "ext_int_edge" 2 870 ""
V L "source" 2 870 "int8" `759 
V L "edge" 2 870 "int8" `760 
F B "ext_int_edge" 2 870 "void(int8 source,int8 edge)" `758 
F N "jump_to_isr" 2 871 ""
V L "address" 2 871 "int16" `762 
F B "jump_to_isr" 2 871 "void(int16 address)" `761  "Constants used in EXT_INT_EDGE() are:"
D G "L_TO_H" 2 873 "0x40"
D G "H_TO_L" 2 874 "0"
D G "GLOBAL" 2 876 "0x0BC0"
D G "PERIPH" 2 877 "0x0B40"
D G "INT_EXT_L2H" 2 878 "0x50000B10"
D G "INT_EXT_H2L" 2 879 "0x60000B10"
D G "INT_EXT" 2 880 "0x300B10"
D G "INT_TIMER0" 2 881 "0x300B20"
D G "INT_TIMER1" 2 882 "0x309101"
D G "INT_TIMER2" 2 883 "0x309102"
D G "INT_TBE" 2 884 "0x309110"
D G "INT_RDA" 2 885 "0x309120"
D G "INT_AD" 2 886 "0x309140"
D G "INT_TIMER1_GATE" 2 887 "0x309180"
D G "INT_COMP" 2 888 "0x309220"
D G "INT_COMP2" 2 889 "0x309240"
D G "INT_PWM1" 2 890 "0x309310"
D G "INT_PWM2" 2 891 "0x309320"
D G "INT_PWM3" 2 892 "0x309340"
D G "INT_PWM4" 2 893 "0x309380"
D G "INT_IOC" 2 894 "0x3FFF0B08"
D G "INT_IOC_A0" 2 895 "0x30010B08"
D G "INT_IOC_A0_L2H" 2 896 "0x10010B08"
D G "INT_IOC_A0_H2L" 2 897 "0x20010B08"
D G "INT_IOC_A1" 2 898 "0x30020B08"
D G "INT_IOC_A1_L2H" 2 899 "0x10020B08"
D G "INT_IOC_A1_H2L" 2 900 "0x20020B08"
D G "INT_IOC_A2" 2 901 "0x30040B08"
D G "INT_IOC_A2_L2H" 2 902 "0x10040B08"
D G "INT_IOC_A2_H2L" 2 903 "0x20040B08"
D G "INT_IOC_A3" 2 904 "0x30080B08"
D G "INT_IOC_A3_L2H" 2 905 "0x10080B08"
D G "INT_IOC_A3_H2L" 2 906 "0x20080B08"
D G "INT_IOC_A4" 2 907 "0x30100B08"
D G "INT_IOC_A4_L2H" 2 908 "0x10100B08"
D G "INT_IOC_A4_H2L" 2 909 "0x20100B08"
D G "INT_IOC_A5" 2 910 "0x30200B08"
D G "INT_IOC_A5_L2H" 2 911 "0x10200B08"
D G "INT_IOC_A5_H2L" 2 912 "0x20200B08"
D G "INT_IOC_C0" 2 913 "0x32010B08"
D G "INT_IOC_C0_L2H" 2 914 "0x12010B08"
D G "INT_IOC_C0_H2L" 2 915 "0x22010B08"
D G "INT_IOC_C1" 2 916 "0x32020B08"
D G "INT_IOC_C1_L2H" 2 917 "0x12020B08"
D G "INT_IOC_C1_H2L" 2 918 "0x22020B08"
D G "INT_IOC_C2" 2 919 "0x32040B08"
D G "INT_IOC_C2_L2H" 2 920 "0x12040B08"
D G "INT_IOC_C2_H2L" 2 921 "0x22040B08"
D G "INT_IOC_C3" 2 922 "0x32080B08"
D G "INT_IOC_C3_L2H" 2 923 "0x12080B08"
D G "INT_IOC_C3_H2L" 2 924 "0x22080B08"
D G "INT_IOC_C4" 2 925 "0x32100B08"
D G "INT_IOC_C4_L2H" 2 926 "0x12100B08"
D G "INT_IOC_C4_H2L" 2 927 "0x22100B08"
D G "INT_IOC_C5" 2 928 "0x32200B08"
D G "INT_IOC_C5_L2H" 2 929 "0x12200B08"
D G "INT_IOC_C5_H2L" 2 930 "0x22200B08"
D G "INT_RA" 2 937 "0x30FF0B08"
D G "INT_RA0" 2 938 "0x30010B08"
D G "INT_RA0_L2H" 2 939 "0x10010B08"
D G "INT_RA0_H2L" 2 940 "0x20010B08"
D G "INT_RA1" 2 941 "0x30020B08"
D G "INT_RA1_L2H" 2 942 "0x10020B08"
D G "INT_RA1_H2L" 2 943 "0x20020B08"
D G "INT_RA2" 2 944 "0x30040B08"
D G "INT_RA2_L2H" 2 945 "0x10040B08"
D G "INT_RA2_H2L" 2 946 "0x20040B08"
D G "INT_RA3" 2 947 "0x30080B08"
D G "INT_RA3_L2H" 2 948 "0x10080B08"
D G "INT_RA3_H2L" 2 949 "0x20080B08"
D G "INT_RA4" 2 950 "0x30100B08"
D G "INT_RA4_L2H" 2 951 "0x10100B08"
D G "INT_RA4_H2L" 2 952 "0x20100B08"
D G "INT_RA5" 2 953 "0x30200B08"
D G "INT_RA5_L2H" 2 954 "0x10200B08"
D G "INT_RA5_H2L" 2 955 "0x20200B08"
D G "INT_RC" 2 956 "0x30FF0B08"
D G "INT_RC0" 2 957 "0x32010B08"
D G "INT_RC0_L2H" 2 958 "0x12010B08"
D G "INT_RC0_H2L" 2 959 "0x22010B08"
D G "INT_RC1" 2 960 "0x32020B08"
D G "INT_RC1_L2H" 2 961 "0x12020B08"
D G "INT_RC1_H2L" 2 962 "0x22020B08"
D G "INT_RC2" 2 963 "0x32040B08"
D G "INT_RC2_L2H" 2 964 "0x12040B08"
D G "INT_RC2_H2L" 2 965 "0x22040B08"
D G "INT_RC3" 2 966 "0x32080B08"
D G "INT_RC3_L2H" 2 967 "0x12080B08"
D G "INT_RC3_H2L" 2 968 "0x22080B08"
D G "INT_RC4" 2 969 "0x32100B08"
D G "INT_RC4_L2H" 2 970 "0x12100B08"
D G "INT_RC4_H2L" 2 971 "0x22100B08"
D G "INT_RC5" 2 972 "0x32200B08"
D G "INT_RC5_L2H" 2 973 "0x12200B08"
D G "INT_RC5_H2L" 2 974 "0x22200B08"
D G "sutanum" 1 19 "PIN_A0"
D G "sutachannel" 1 20 "0"
D G "phase1" 1 21 "PIN_A1"
D G "phase2" 1 22 "PIN_A2"
D G "bypass" 1 23 "PIN_A3"
D G "faultout" 1 24 "PIN_C0"
D G "okout" 1 25 "PIN_C1"
D G "motorout" 1 26 "PIN_C2"
D G "timeCal" 1 27 "1953.125"
D G "sutaDelay" 1 28 "50" "*100ms"
D G "blinkDelay" 1 29 "5" "*100ms"
D G "phaseDelay" 1 30 "10"
D G "_FLOAT" 3 15 ""
D G "FLT_RADIX" 3 18 "2"
D G "FLT_MANT_DIG" 3 19 "24" "# of bits in mantissa"
D G "FLT_DIG" 3 21 "6" "# of decimal digits of precision"
D G "FLT_MIN_EXP" 3 23 " (-125)" "min binary exponent"
D G "FLT_MIN_10_EXP" 3 24 " (-37)" "min decimal exponent"
D G "FLT_MAX_EXP" 3 25 "128" "max binary exponent"
D G "FLT_MAX_10_EXP" 3 26 "38" "max decimal exponent"
D G "FLT_MAX" 3 27 "3.402823466e+38F" "max value"
D G "FLT_EPSILON" 3 28 "1.192092896e-07F" "smallest such that 1.0+FLT_EPSILON != 1.0"
D G "FLT_MIN" 3 29 "1.175494351e-38F" "min positive value"
D G "DBL_MANT_DIG" 3 33 "53" "# of bits in mantissa"
D G "DBL_DIG" 3 35 "15" "# of decimal digits of precision"
D G "DBL_MIN_EXP" 3 37 " (-1021)" "min binary exponent"
D G "DBL_MIN_10_EXP" 3 38 " (-307)" "min decimal exponent"
D G "DBL_MAX_EXP" 3 39 "1024" "max binary exponent"
D G "DBL_MAX_10_EXP" 3 40 "308" "max decimal exponent"
D G "DBL_MAX" 3 41 "1.79769313486231e+308F" "max value"
D G "DBL_EPSILON" 3 42 "2.2204460492503131e-16F" "smallest such that 1.0+FLT_EPSILON != 1.0"
D G "DBL_MIN" 3 43 "2.22507385850721e-308F" "min positive value"
D G "LDBL_MANT_DIG" 3 47 "64" "# of bits in mantissa"
D G "LDBL_DIG" 3 49 "18" "# of decimal digits of precision"
D G "LDBL_MIN_EXP" 3 51 " (-16381)" "min binary exponent"
D G "LDBL_MIN_10_EXP" 3 52 " (-4931)" "min decimal exponent"
D G "LDBL_MAX_EXP" 3 53 "16384" "max binary exponent"
D G "LDBL_MAX_10_EXP" 3 54 "4932" "max decimal exponent"
D G "LDBL_MAX" 3 55 "1.18973149535723176502e+4932F" "max value"
D G "LDBL_EPSILON" 3 56 "1.084202172485504434e-019F" "smallest such that 1.0+FLT_EPSILON != 1.0"
D G "LDBL_MIN" 3 57 "3.36210314311209350626e-4932F" "min positive value"
D G "MATH_H" 4 30 ""
D G "PI" 4 35 "3.1415926535897932"
D G "SQRT2" 4 38 "1.4142135623730950"
C L "jump_to_isr" 4 2 3 "FUNCTION"
F N "CEIL_FLOOR" 4 45 ""
V L "x" 4 45 "float" `768 
V L "n" 4 45 "int8" `769 
F G "CEIL_FLOOR" 4 46 "float(float x,int8 n)" `767 
V L "y" 4 47 "float" `770 
V L "res" 4 47 "float" `771 
V L "l" 4 48 "int16" `772 
V L "s" 4 49 "int1" `773 
C L "floor" 4 2 5 "FUNCTION"
F N "floor" 4 207 ""
V L "x" 4 207 "float" `788 
F G "floor" 4 208 "float(float x)" `787 
C L "ceil" 4 2 5 "FUNCTION"
F N "ceil" 4 233 ""
V L "x" 4 233 "float" `790 
F G "ceil" 4 234 "float(float x)" `789 
D G "fabs" 4 259 "abs"
C L "fmod" 4 2 6 "FUNCTION"
F N "fmod" 4 271 ""
V L "x" 4 271 "float" `792 
V L "y" 4 271 "float" `793 
F G "fmod" 4 272 "float(float x,float y)" `791 
V L "i" 4 273 "float" `794 
D G "LN2" 4 334 "0.6931471805599453"
D G "LN2_INV" 4 335 "1.4426950408889634073"
V G "pe" 4 337 "[6]" `799 
F N "exp" 4 341 ""
V L "x" 4 341 "float" `802 
F G "exp" 4 342 "float(float x)" `801 
V L "y" 4 343 "float" `803 
V L "res" 4 343 "float" `804 
V L "r" 4 343 "float" `805 
V L "n" 4 347 "sint8" `806 
V L "s" 4 348 "int1" `807 
C L "exp" 4 2 1 "FUNCTION"
V G "pl" 4 525 "[4]" `811 
V G "ql" 4 526 "[4]" `814 
C L "log" 4 2 3 "FUNCTION"
F N "log" 4 534 ""
V L "x" 4 534 "float" `817 
F G "log" 4 535 "float(float x)" `816 
V L "y" 4 536 "float" `818 
V L "res" 4 536 "float" `819 
V L "r" 4 536 "float" `820 
V L "y2" 4 536 "float" `821 
V L "n" 4 540 "sint8" `822 
C L "log" 4 2 1 "FUNCTION"
D G "LN10" 4 758 "2.3025850929940456"
D G "LN10_INV" 4 759 "0.4342944819032518276"
C L "log10" 4 2 3 "FUNCTION"
F N "log10" 4 767 ""
V L "x" 4 767 "float" `824 
F G "log10" 4 768 "float(float x)" `823 
V L "r" 4 769 "float" `825 
C L "modf" 4 2 8 "FUNCTION"
F N "modf" 4 808 ""
V L "value" 4 808 "float" `827 
V L "iptr" 4 808 "*float" `828 
F G "modf" 4 809 "float(float value,*float iptr)" `826 
C L "pwr" 4 2 6 "FUNCTION"
F N "pwr" 4 836 ""
V L "x" 4 836 "float" `830 
V L "y" 4 836 "float" `831 
F G "pwr" 4 837 "float(float x,float y)" `829 
C L "pow" 4 2 7 "FUNCTION"
F N "pow" 4 899 ""
V L "x" 4 899 "float" `833 
V L "y" 4 899 "float" `834 
F G "pow" 4 900 "float(float x,float y)" `832 
C L "sqrt" 4 2 5 "FUNCTION"
F N "sqrt" 4 960 ""
V L "x" 4 960 "float" `836 
F G "sqrt" 4 961 "float(float x)" `835 
V L "y" 4 962 "float" `837 
V L "res" 4 962 "float" `838 
V L "p" 4 967 "*int8" `839 
D G "PI_DIV_BY_TWO_INV" 4 1156 "0.63661977236758134"
D G "PI_DIV_BY_TWO" 4 1160 "1.5707963267948966"
D G "TWOBYPI" 4 1164 "0.6366197723675813"
C L "cos" 4 2 3 "FUNCTION"
F N "cos" 4 1172 ""
V L "x" 4 1172 "float" `841 
F G "cos" 4 1173 "float(float x)" `840 
V L "y" 4 1174 "float" `842 
V L "t" 4 1174 "float" `843 
V L "t2" 4 1174 "float" `844 
V L "quad" 4 1175 "int8" `845 
V L "i" 4 1175 "int8" `846 
V L "frac" 4 1176 "float" `847 
V L "p" 4 1177 "float[5]" `848  "by the series definition for cosine"
C L "cos" 4 2 1 "FUNCTION"
C L "cos" 4 2 2 "FUNCTION"
C L "cos" 4 2 1 "FUNCTION"
C L "cos" 4 2 1 "FUNCTION"
C L "cos" 4 2 1 "FUNCTION"
C L "cos" 4 2 1 "FUNCTION"
C L "cos" 4 2 1 "FUNCTION"
C L "cos" 4 2 1 "FUNCTION"
C L "sin" 4 2 5 "FUNCTION"
F N "sin" 4 1311 ""
V L "x" 4 1311 "float" `850 
F G "sin" 4 1312 "float(float x)" `849 
C L "tan" 4 2 5 "FUNCTION"
F N "tan" 4 1337 ""
V L "x" 4 1337 "float" `852 
F G "tan" 4 1338 "float(float x)" `851 
V L "c" 4 1339 "float" `853 
V L "s" 4 1339 "float" `854 
V G "pas" 4 1377 "[3]" `856 
V G "qas" 4 1378 "[3]" `859 
F N "ASIN_COS" 4 1380 ""
V L "x" 4 1380 "float" `862 
V L "n" 4 1380 "int8" `863 
F G "ASIN_COS" 4 1381 "float(float x,int8 n)" `861 
V L "y" 4 1382 "float" `864 
V L "res" 4 1382 "float" `865 
V L "r" 4 1382 "float" `866 
V L "y2" 4 1382 "float" `867 
V L "s" 4 1383 "int1" `868 
C L "ASIN_COS" 4 2 1 "FUNCTION"
C L "ASIN_COS" 4 2 1 "FUNCTION"
C L "asin" 4 2 5 "FUNCTION"
F N "asin" 4 1538 ""
V L "x" 4 1538 "float" `870 
F G "asin" 4 1539 "float(float x)" `869 
V L "r" 4 1540 "float" `871 
C L "acos" 4 2 5 "FUNCTION"
F N "acos" 4 1572 ""
V L "x" 4 1572 "float" `873 
F G "acos" 4 1573 "float(float x)" `872 
V L "r" 4 1574 "float" `874 
V G "pat" 4 1600 "[4]" `876 
V G "qat" 4 1601 "[4]" `879 
C L "atan" 4 2 3 "FUNCTION"
F N "atan" 4 1609 ""
V L "x" 4 1609 "float" `882 
F G "atan" 4 1610 "float(float x)" `881 
V L "y" 4 1611 "float" `883 
V L "res" 4 1611 "float" `884 
V L "r" 4 1611 "float" `885 
V L "s" 4 1612 "int1" `886 
V L "flag" 4 1612 "int1" `887 
C L "atan" 4 2 1 "FUNCTION"
C L "atan2" 4 2 7 "FUNCTION"
F N "atan2" 4 1752 ""
V L "y" 4 1752 "float" `889 
V L "x" 4 1752 "float" `890 
F G "atan2" 4 1753 "float(float y,float x)" `888 
V L "z" 4 1754 "float" `891 
V L "sign" 4 1755 "int1" `892 
V L "quad" 4 1756 "int8" `893 
C L "atan2" 4 2 1 "FUNCTION"
C L "atan2" 4 2 1 "FUNCTION"
C L "cosh" 4 2 7 "FUNCTION"
F N "cosh" 4 1974 ""
V L "x" 4 1974 "float" `896 
F G "cosh" 4 1975 "float(float x)" `895 
C L "sinh" 4 2 6 "FUNCTION"
F N "sinh" 4 2001 ""
V L "x" 4 2001 "float" `898 
F G "sinh" 4 2002 "float(float x)" `897 
C L "tanh" 4 2 6 "FUNCTION"
F N "tanh" 4 2031 ""
V L "x" 4 2031 "float" `900 
F G "tanh" 4 2032 "float(float x)" `899 
D G "LOG2" 4 2061 ".30102999566398119521"
D G "LOG2_INV" 4 2062 "3.32192809488736234787"
F N "frexp" 4 2063 ""
V L "x" 4 2063 "float" `902 
V L "exp" 4 2063 "*sint8" `903 
F G "frexp" 4 2064 "float(float x,*sint8 exp)" `901 
V L "res" 4 2065 "float" `904 
V L "sign" 4 2066 "int1" `905 
C L "ldexp" 4 2 6 "FUNCTION"
F N "ldexp" 4 2208 ""
V L "value" 4 2208 "float" `907 
V L "exp" 4 2208 "sint8" `908 
F G "ldexp" 4 2209 "float(float value,sint8 exp)" `906 
D G "_STDLIB" 5 13 ""
D G "RAND_MAX" 5 20 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 5 26 "1"
T G "div_t" 5 34 "{sint8 quot,sint8 rem}" `912 
T G "ldiv_t" 5 39 "{sint16 quot,sint16 rem}" `916  "(C) Copyright 1996,2003 Custom Computer Services           ////"
D G "_STDDEF" 6 13 ""
D G "ptrdiff_t" 6 18 "unsigned int16"
D G "size_t" 6 22 "unsigned int8"
D G "wchar_t" 6 26 "unsigned char"
D G "NULL" 6 27 "0"
D G "offsetof" 6 29 "(s,f) (offsetofbit(s,f)/8)"
C L "atoi" 5 44 2 "FUNCTION"
C L "atoi" 5 47 1 "*"
C L "atoi" 5 47 1 "*"
F N "atoi" 5 51 ""
V L "s" 5 51 "*int8" `918 
f G "atoi" 5 51 "sint8(*int8 s)" `917  "Syntax: signed int32  atoi32(char * s)"
F N "atoi32" 5 59 ""
V L "s" 5 59 "*int8" `920 
f G "atoi32" 5 59 "sint32(*int8 s)" `919  "Syntax: char *  itoa(signed int32 num, int8 base, char * s)"
C L "atoi32" 5 47 2 "FUNCTION"
F N "itoa" 5 80 ""
V L "num" 5 80 "sint32" `922 
V L "base" 5 80 "int8" `923 
V L "s" 5 80 "*int8" `924 
f G "itoa" 5 80 "*int8(sint32 num,int8 base,*int8 s)" `921  "Standard template: signed int16  atol(char * s)"
C L "itoa" 5 82 1 "*"
C L "itoa" 5 82 1 "*"
F N "atol" 5 86 ""
V L "s" 5 86 "*int8" `926 
f G "atol" 5 86 "sint16(*int8 s)" `925  "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "atol" 5 88 1 "*"
C L "atol" 5 88 1 "*"
C L "atol" 5 88 1 "*"
C L "atol" 5 88 1 "*"
F N "strtol" 5 94 ""
V L "s" 5 94 "*int8" `928 
V L "endptr" 5 94 "*int8" `929 
V L "base" 5 94 "sint8" `930 
f G "strtol" 5 94 "sint16(*int8 s,*int8 endptr,sint8 base)" `927  "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 5 96 1 "*"
C L "strtol" 5 96 1 "*"
C L "strtol" 5 96 1 "*"
C L "strtol" 5 96 1 "*"
F N "strtoul" 5 102 ""
V L "s" 5 102 "*int8" `932 
V L "endptr" 5 102 "*int8" `933 
V L "base" 5 102 "sint8" `934 
f G "strtoul" 5 102 "int16(*int8 s,*int8 endptr,sint8 base)" `931  "Standart template: float strtof(char * s,char *endptr)"
C L "strtoul" 5 96 2 "FUNCTION"
C L "strtoul" 5 104 1 "*"
C L "strtoul" 5 104 1 "*"
C L "strtoul" 5 104 1 "*"
F N "strtof" 5 111 ""
V L "s" 5 111 "*int8" `936 
V L "endptr" 5 111 "??0 *" `937 
f G "strtof" 5 111 "float(*int8 s,??0 * endptr)" `935  "provided for compatibility"
D G "strtof48" 5 117 "(s,e) strtof(s, e)"
D G "strtod" 5 118 "(s,e) strtof(s, e)"
C L "strtof" 5 104 1 "FUNCTION"
C L "strtof" 5 121 1 "*"
D G "atof" 5 125 "(s)   strtof(s, (char*)0)"
C L "strtof" 5 121 1 "FUNCTION"
C L "strtof" 5 144 1 "*"
C L "strtof" 5 144 1 "*"
C L "strtof" 5 144 1 "*"
F N "atoe" 5 150 ""
V L "s" 5 150 "*int8" `940 
f G "atoe" 5 150 "float(*int8 s)" `939  "Pseudo-random sequence generation functions"
C L "atoe" 5 144 1 "FUNCTION"
C L "atoe" 5 161 1 "*"
C L "atoe" 5 161 1 "*"
C L "atoe" 5 161 1 "*"
C L "atoe" 5 161 1 "*"
C L "atoe" 5 161 1 "*"
F N "rand" 5 170 ""
f G "rand" 5 170 "int16()" `941  "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 5 172 1 "*"
C L "rand" 5 172 1 "*"
C L "rand" 5 172 1 "*"
C L "rand" 5 172 1 "*"
C L "rand" 5 172 1 "*"
C L "rand" 5 172 1 "*"
C L "rand" 5 172 1 "*"
C L "rand" 5 172 1 "*"
C L "rand" 5 172 1 "*"
C L "rand" 5 172 1 "*"
C L "rand" 5 172 1 "*"
C L "rand" 5 172 1 "*"
C L "rand" 5 172 1 "*"
C L "rand" 5 172 1 "*"
C L "rand" 5 172 1 "*"
F N "srand" 5 192 ""
V L "seed" 5 192 "int32" `943 
f G "srand" 5 192 "void(int32 seed)" `942  "Memory management functions"
C L "srand" 5 172 3 "FUNCTION"
F N "system" 5 206 ""
V L "string" 5 206 "*int8" `945 
f G "system" 5 206 "sint8(*int8 string)" `944  "Searching and sorting utilities"
C L "system" 5 172 1 "FUNCTION"
C L "system" 5 212 1 "*"
C L "system" 5 212 1 "*"
C L "system" 5 212 1 "*"
C L "system" 5 212 1 "*"
C L "system" 5 212 1 "*"
C L "system" 5 212 1 "*"
C L "system" 5 212 1 "*"
C L "system" 5 212 1 "*"
C L "system" 5 212 1 "*"
C L "system" 5 212 1 "*"
C L "system" 5 212 4 "*"
C L "system" 5 230 1 "*"
C L "system" 5 230 1 "*"
C L "system" 5 230 1 "*"
C L "system" 5 230 1 "*"
C L "system" 5 230 1 "*"
C L "system" 5 230 1 "*"
C L "system" 5 230 1 "*"
C L "system" 5 230 1 "*"
D G "labs" 5 250 "abs"
F N "div" 5 252 ""
V L "numer" 5 252 "sint8" `947 
V L "denom" 5 252 "sint8" `948 
f G "div" 5 252 "div_t(sint8 numer,sint8 denom)" `946 
F N "ldiv" 5 253 ""
V L "numer" 5 253 "sint16" `950 
V L "denom" 5 253 "sint16" `951 
f G "ldiv" 5 253 "ldiv_t(sint16 numer,sint16 denom)" `949  "Multibyte character functions"
C L "ldiv" 5 230 4 "FUNCTION"
C L "ldiv" 6 2 7 "FUNCTION"
D G "_STRING" 7 12 ""
C L "ldiv" 6 2 7 "FUNCTION"
D G "_CTYPE" 8 12 ""
D G "islower" 8 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 8 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 8 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 8 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 8 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 8 19 "(x)  ((x)==' ')"
D G "isxdigit" 8 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 8 21 "(x)  ((x)<' ')"
D G "isprint" 8 22 "(x)  ((x)>=' ')"
D G "isgraph" 8 23 "(x)  ((x)>' ')"
D G "ispunct" 8 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "ldiv" 7 19 10 "FUNCTION"
F N "memmove" 7 34 ""
V L "s1" 7 34 "*void" `953 
V L "s2" 7 34 "*void" `954 
V L "n" 7 34 "int8" `955 
F G "memmove" 7 35 "*int8(*void s1,*void s2,int8 n)" `952 
V L "sc1" 7 36 "*int8" `956 
V L "sc2" 7 37 "*int8" `957 
D G "strcopy" 7 54 "strcpy"
C L "strncpy" 7 19 4 "FUNCTION"
F N "strncpy" 7 61 ""
V L "s1" 7 61 "*int8" `959 
V L "s2" 7 61 "*int8" `960 
V L "n" 7 61 "int8" `961 
F G "strncpy" 7 62 "*int8(*int8 s1,*int8 s2,int8 n)" `958 
V L "s" 7 63 "*int8" `962 
C L "strcat" 7 19 3 "FUNCTION"
F N "strcat" 7 78 ""
V L "s1" 7 78 "*int8" `964 
V L "s2" 7 78 "*int8" `965 
F G "strcat" 7 79 "*int8(*int8 s1,*int8 s2)" `963 
V L "s" 7 80 "*int8" `966 
C L "strncat" 7 19 2 "FUNCTION"
F N "strncat" 7 96 ""
V L "s1" 7 96 "*int8" `968 
V L "s2" 7 96 "*int8" `969 
V L "n" 7 96 "int8" `970 
F G "strncat" 7 97 "*int8(*int8 s1,*int8 s2,int8 n)" `967 
V L "s" 7 98 "*int8" `971 
C L "memcmp" 7 19 3 "FUNCTION"
F N "memcmp" 7 120 ""
V L "s1" 7 120 "*void" `973 
V L "s2" 7 120 "*void" `974 
V L "n" 7 120 "int8" `975 
F G "memcmp" 7 121 "sint8(*void s1,*void s2,int8 n)" `972 
V L "su1" 7 122 "*int8" `976 
V L "su2" 7 122 "*int8" `977 
C L "strcmp" 7 19 2 "FUNCTION"
F N "strcmp" 7 134 ""
V L "s1" 7 134 "*int8" `979 
V L "s2" 7 134 "*int8" `980 
F G "strcmp" 7 135 "sint8(*int8 s1,*int8 s2)" `978 
C L "strcoll" 7 19 2 "FUNCTION"
F N "strcoll" 7 144 ""
V L "s1" 7 144 "*int8" `982 
V L "s2" 7 144 "*int8" `983 
F G "strcoll" 7 145 "sint8(*int8 s1,*int8 s2)" `981 
C L "strncmp" 7 19 4 "FUNCTION"
F N "strncmp" 7 157 ""
V L "s1" 7 157 "*int8" `985 
V L "s2" 7 157 "*int8" `986 
V L "n" 7 157 "int8" `987 
F G "strncmp" 7 158 "sint8(*int8 s1,*int8 s2,int8 n)" `984 
C L "strxfrm" 7 19 4 "FUNCTION"
F N "strxfrm" 7 170 ""
V L "s1" 7 170 "*int8" `989 
V L "s2" 7 170 "*int8" `990 
V L "n" 7 170 "int8" `991 
F G "strxfrm" 7 171 "int8(*int8 s1,*int8 s2,int8 n)" `988 
V L "c" 7 172 "int8" `992 
V L "n1" 7 173 "int8" `993 
C L "strxfrm" 7 19 1 "FUNCTION"
C L "memchr" 7 19 3 "FUNCTION"
F N "memchr" 7 201 ""
V L "s" 7 201 "*void" `995 
V L "c" 7 201 "int8" `996 
V L "n" 7 201 "int8" `997 
F G "memchr" 7 202 "*int8(*void s,int8 c,int8 n)" `994 
V L "uc" 7 203 "int8" `998 
V L "su" 7 204 "*int8" `999 
C L "strchr" 7 19 2 "FUNCTION"
F N "strchr" 7 215 ""
V L "s" 7 215 "*int8" `1001 
V L "c" 7 215 "int8" `1002 
F G "strchr" 7 216 "*int8(*int8 s,int8 c)" `1000 
C L "strcspn" 7 19 4 "FUNCTION"
F N "strcspn" 7 227 ""
V L "s1" 7 227 "*int8" `1004 
V L "s2" 7 227 "*int8" `1005 
F G "strcspn" 7 228 "int8(*int8 s1,*int8 s2)" `1003 
V L "sc1" 7 229 "*int8" `1006 
V L "sc2" 7 229 "*int8" `1007 
C L "strpbrk" 7 19 4 "FUNCTION"
F N "strpbrk" 7 242 ""
V L "s1" 7 242 "*int8" `1009 
V L "s2" 7 242 "*int8" `1010 
F G "strpbrk" 7 243 "*int8(*int8 s1,*int8 s2)" `1008 
V L "sc1" 7 244 "*int8" `1011 
V L "sc2" 7 244 "*int8" `1012 
C L "strrchr" 7 19 2 "FUNCTION"
F N "strrchr" 7 257 ""
V L "s" 7 257 "*int8" `1014 
V L "c" 7 257 "int8" `1015 
F G "strrchr" 7 258 "*int8(*int8 s,int8 c)" `1013 
V L "p" 7 259 "*int8" `1016 
C L "strspn" 7 19 2 "FUNCTION"
F N "strspn" 7 272 ""
V L "s1" 7 272 "*int8" `1018 
V L "s2" 7 272 "*int8" `1019 
F G "strspn" 7 273 "int8(*int8 s1,*int8 s2)" `1017 
V L "sc1" 7 274 "*int8" `1020 
V L "sc2" 7 274 "*int8" `1021 
C L "strstr" 7 19 6 "FUNCTION"
F N "strstr" 7 291 ""
V L "s1" 7 291 "*int8" `1023 
V L "s2" 7 291 "*int8" `1024 
F G "strstr" 7 292 "*int8(*int8 s1,*int8 s2)" `1022 
V L "s" 7 293 "*int8" `1025 
V L "t" 7 293 "*int8" `1026 
C L "strlen" 7 19 2 "FUNCTION"
F N "strlen" 7 318 ""
V L "s" 7 318 "*int8" `1028 
F G "strlen" 7 319 "int8(*int8 s)" `1027 
V L "sc" 7 320 "*int8" `1029 
C L "strtok" 7 19 13 "FUNCTION"
F N "strtok" 7 341 ""
V L "s1" 7 341 "*int8" `1031 
V L "s2" 7 341 "*int8" `1032 
F G "strtok" 7 342 "*int8(*int8 s1,*int8 s2)" `1030 
V L "beg" 7 343 "*int8" `1033 
V L "end" 7 343 "*int8" `1034 
V L "save" 7 344 "*int8" `1035 
C L "stricmp" 7 19 6 "FUNCTION"
F N "stricmp" 7 392 ""
V L "s1" 7 392 "*int8" `1037 
V L "s2" 7 392 "*int8" `1038 
F G "stricmp" 7 393 "sint8(*int8 s1,*int8 s2)" `1036 
C L "strlwr" 7 19 3 "FUNCTION"
F N "strlwr" 7 406 ""
V L "s" 7 406 "*int8" `1042 
F G "strlwr" 7 407 "*int8(*int8 s)" `1041 
V L "p" 7 408 "*int8" `1043 
C L "strupr" 7 19 3 "FUNCTION"
F N "strupr" 7 420 ""
V L "s" 7 420 "*int8" `1045 
F G "strupr" 7 421 "*int8(*int8 s)" `1044 
V L "p" 7 422 "*int8" `1046 
F N "div" 5 275 ""
V L "numer" 5 275 "sint8" `947 
V L "denom" 5 275 "sint8" `1049 
F G "div" 5 276 "div_t(sint8 numer,sint8 denom)" `946 
V L "val" 5 277 "div_t" `1047 
F N "ldiv" 5 283 ""
V L "numer" 5 283 "sint16" `950 
V L "denom" 5 283 "sint16" `1056 
F G "ldiv" 5 284 "ldiv_t(sint16 numer,sint16 denom)" `949 
V L "val" 5 285 "ldiv_t" `1054 
F N "atoe" 5 362 ""
V L "s" 5 362 "*int8" `1062 
F G "atoe" 5 363 "float(*int8 s)" `939 
V L "pow10" 5 364 "float" `1061 
V L "result" 5 365 "float" `1062 
V L "sign" 5 366 "int8" `1063 
V L "expsign" 5 367 "int8" `1064 
V L "c" 5 368 "int8" `1065 
V L "ptr" 5 369 "int8" `1066 
V L "i" 5 370 "int8" `1067 
V L "exp" 5 371 "float" `1068 
V L "expcnt" 5 372 "int8" `1069 
C L "atoe" 5 398 1 "FUNCTION"
F N "atoi" 5 430 ""
V L "s" 5 430 "*int8" `1071 
F G "atoi" 5 431 "sint8(*int8 s)" `917 
V L "result" 5 432 "sint8" `1070 
V L "sign" 5 433 "int8" `1071 
V L "base" 5 433 "int8" `1072 
V L "index" 5 433 "int8" `1073 
V L "c" 5 434 "int8" `1074 
C L "atoi" 5 398 1 "FUNCTION"
C L "atoi" 5 398 1 "FUNCTION"
C L "atoi" 5 398 1 "FUNCTION"
C L "atoi" 5 398 1 "FUNCTION"
C L "atoi" 5 398 1 "FUNCTION"
C L "atoi" 5 398 1 "FUNCTION"
F N "atol" 5 499 ""
V L "s" 5 499 "*int8" `1076 
F G "atol" 5 500 "sint16(*int8 s)" `925 
V L "result" 5 501 "sint16" `1075 
V L "sign" 5 502 "int8" `1076 
V L "base" 5 502 "int8" `1077 
V L "index" 5 502 "int8" `1078 
V L "c" 5 503 "int8" `1079 
C L "atol" 5 398 1 "FUNCTION"
C L "atol" 5 398 1 "FUNCTION"
C L "atol" 5 398 1 "FUNCTION"
C L "atol" 5 398 1 "FUNCTION"
C L "mult_with10" 5 398 1 "FUNCTION"
F N "mult_with10" 5 566 ""
V L "num" 5 566 "int32" `1081 
F G "mult_with10" 5 567 "sint32(int32 num)" `1080 
F N "atoi32" 5 572 ""
V L "s" 5 572 "*int8" `1083 
F G "atoi32" 5 573 "sint32(*int8 s)" `919 
V L "result" 5 574 "sint32" `1082 
V L "sign" 5 575 "int8" `1083 
V L "base" 5 575 "int8" `1084 
V L "index" 5 575 "int8" `1085 
V L "c" 5 576 "int8" `1086 
C L "atoi32" 5 398 1 "FUNCTION"
C L "atoi32" 5 398 1 "FUNCTION"
C L "atoi32" 5 398 1 "FUNCTION"
C L "atoi32" 5 398 1 "FUNCTION"
C L "atoi32" 5 398 1 "FUNCTION"
F N "itoa" 5 771 ""
V L "num" 5 771 "sint32" `922 
V L "base" 5 771 "int8" `923 
V L "s" 5 771 "*int8" `1090 
F G "itoa" 5 772 "*int8(sint32 num,int8 base,*int8 s)" `921 
V L "temp" 5 773 "int32" `1087 
V L "i" 5 774 "int8" `1088 
V L "sign" 5 774 "int8" `1089 
V L "cnt" 5 774 "int8" `1090 
V L "c" 5 775 "int8" `1091 
C L "itoa" 5 398 1 "FUNCTION"
C L "itoa" 5 398 1 "FUNCTION"
C L "itoa" 5 398 1 "FUNCTION"
C L "itoa" 5 398 1 "FUNCTION"
C L "itoa" 5 398 1 "FUNCTION"
F N "strtof" 5 886 ""
V L "s" 5 886 "*int8" `936 
V L "endptr" 5 886 "??0 *" `1100 
F G "strtof" 5 887 "float(*int8 s,??0 * endptr)" `935 
V L "pow10" 5 888 "float" `1098 
V L "result" 5 889 "float" `1099 
V L "skip" 5 890 "int1" `1100 
V L "sign" 5 890 "int1" `1101 
V L "point" 5 890 "int1" `1102 
V L "c" 5 891 "int8" `1103 
V L "ptr" 5 892 "int8" `1104 
F N "strtoul" 5 1105 ""
V L "s" 5 1105 "*int8" `932 
V L "endptr" 5 1105 "*int8" `933 
V L "base" 5 1105 "sint8" `1109 
F G "strtoul" 5 1106 "int16(*int8 s,*int8 endptr,sint8 base)" `931 
V L "sc" 5 1107 "*int8" `1106 
V L "s1" 5 1107 "*int8" `1107 
V L "sd" 5 1107 "*int8" `1108 
V L "x" 5 1108 "int16" `1109 
V L "sign" 5 1109 "int8" `1110 
V L "digits" 5 1110 "int8[1]" `1111 
C L "strtoul" 5 398 1 "FUNCTION"
C L "strtoul" 5 398 1 "FUNCTION"
C L "strtoul" 5 398 1 "FUNCTION"
F N "strtol" 5 1167 ""
V L "s" 5 1167 "*int8" `928 
V L "endptr" 5 1167 "*int8" `929 
V L "base" 5 1167 "sint8" `1116 
F G "strtol" 5 1168 "sint16(*int8 s,*int8 endptr,sint8 base)" `927 
V L "sc" 5 1169 "*int8" `1113 
V L "s1" 5 1169 "*int8" `1114 
V L "sd" 5 1169 "*int8" `1115 
V L "x" 5 1170 "sint16" `1116 
V L "sign" 5 1171 "int8" `1117 
V L "digits" 5 1172 "int8[1]" `1118 
C L "strtol" 5 398 1 "FUNCTION"
C L "strtol" 5 398 1 "FUNCTION"
C L "strtol" 5 398 1 "FUNCTION"
F N "system" 5 1231 ""
V L "string" 5 1231 "*int8" `1121 
F G "system" 5 1232 "sint8(*int8 string)" `944 
F N "mblen" 5 1236 ""
V L "s" 5 1236 "*int8" `1121 
V L "n" 5 1236 "int8" `1122 
F G "mblen" 5 1237 "int8(*int8 s,int8 n)" `1120 
F N "mbtowc" 5 1241 ""
V L "pwc" 5 1241 "*int8" `1124 
V L "s" 5 1241 "*int8" `1125 
V L "n" 5 1241 "int8" `1126 
F G "mbtowc" 5 1242 "int8(*int8 pwc,*int8 s,int8 n)" `1123 
F N "wctomb" 5 1247 ""
V L "s" 5 1247 "*int8" `1128 
V L "wchar" 5 1247 "int8" `1129 
F G "wctomb" 5 1248 "int8(*int8 s,int8 wchar)" `1127 
F N "mbstowcs" 5 1253 ""
V L "pwcs" 5 1253 "*int8" `1131 
V L "s" 5 1253 "*int8" `1132 
V L "n" 5 1253 "int8" `1133 
F G "mbstowcs" 5 1254 "int8(*int8 pwcs,*int8 s,int8 n)" `1130 
F N "wcstombs" 5 1259 ""
V L "s" 5 1259 "*int8" `1135 
V L "pwcs" 5 1259 "*int8" `1136 
V L "n" 5 1259 "int8" `1137 
F G "wcstombs" 5 1260 "int8(*int8 s,*int8 pwcs,int8 n)" `1134 
V G "_Randseed" 5 1269 "int32" `1138 
F N "rand" 5 1271 ""
F G "rand" 5 1272 "int16()" `941 
F N "srand" 5 1277 ""
V L "seed" 5 1277 "int32" `1143 
F G "srand" 5 1278 "void(int32 seed)" `942 
F N "*_Cmpfun" 5 1287 ""
V L "p1" 5 1287 "*int8" `1143 
V L "p2" 5 1287 "*int8" `1144 
T G "*_Cmpfun" 5 1287 "sint8(*int8 p1,*int8 p2)" `1142 
F N "qsort" 5 1294 ""
V L "qdata" 5 1294 "*int8" `1147 
V L "qitems" 5 1294 "int8" `1148 
V L "qsize" 5 1294 "int8" `1149 
V L "cmp" 5 1294 "_Cmpfun" `1150 
F G "qsort" 5 1294 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)" `1146 
V L "m" 5 1295 "int8" `1151 
V L "j" 5 1295 "int8" `1152 
V L "i" 5 1295 "int8" `1153 
V L "l" 5 1295 "int8" `1154 
V L "done" 5 1296 "int1" `1155 
V L "t" 5 1297 "int8[16]" `1156 
F N "bsearch" 5 1322 ""
V L "key" 5 1322 "*int8" `1159 
V L "base" 5 1322 "*int8" `1160 
V L "num" 5 1322 "int8" `1161 
V L "width" 5 1322 "int8" `1162 
V L "cmp" 5 1322 "_Cmpfun" `1163 
F G "bsearch" 5 1323 "*int8(*int8 key,*int8 base,int8 num,int8 width,_Cmpfun cmp)" `1158 
V L "p" 5 1324 "*int8" `1164 
V L "q" 5 1324 "*int8" `1165 
V L "n" 5 1325 "int8" `1166 
V L "pivot" 5 1326 "int8" `1167 
V L "val" 5 1327 "sint8" `1168 
C L "bsearch" 5 398 1 "FUNCTION"
D G "_STDIO" 9 12 ""
V G "ms" 0 9 "int8" `1169 
V G "sutax" 0 10 "int8" `1170 
V G "sutafinish" 0 10 "int8" `1171 
V G "curState" 0 10 "int8" `1172 
V G "time" 0 11 "int16" `1173 
V G "timerSuta" 0 11 "int16" `1174 
V G "timerBlink" 0 11 "int16" `1175 
V G "timerPhase" 0 11 "int16" `1176 
V G "t1_start" 0 12 "int8" `1177 
V G "t1_end" 0 12 "int8" `1178  ",t2_end;// t3_start, t3_end;"
V G "dif1" 0 13 "float" `1179  ", dif2;"
V G "angle1" 0 14 "int8" `1180  "int angle2;"
V G "pf" 0 16 "float" `1181 
V G "phq" 0 17 "int1" `1182 
V G "sutadone" 0 17 "int1" `1183 
V G "okstate" 0 17 "int1" `1184 
V G "blink" 0 17 "int1" `1185 
F N "TIMER0_isr" 0 21 ""
F G "TIMER0_isr" 0 22 "void()" `1186 
F N "TIMER2_isr" 0 27 ""
F G "TIMER2_isr" 0 28 "void(int8 pin)" `1187 
F N "readADC" 0 33 ""
V L "pin" 0 33 "int8" `1189 
F G "readADC" 0 33 "int8(int8 pin,int8 readADC)" `1188 
F N "motor" 0 38 ""
V L "state" 0 38 "int8" `1191 
F G "motor" 0 38 "void(int8 state,int8 readADC)" `1190 
F N "ok" 0 45 ""
V L "state" 0 45 "int8" `1193 
F G "ok" 0 45 "void(int8 state,int8 readADC)" `1192 
F N "fault" 0 52 ""
V L "state" 0 52 "int8" `1195 
F G "fault" 0 52 "void(int8 state)" `1194 
F N "stop" 0 61 ""
F G "stop" 0 61 "void()" `1196 
F N "getPhq" 0 68 ""
F G "getPhq" 0 68 "void()" `1197 
F N "getsutanum" 0 88 ""
F G "getsutanum" 0 88 "void(int8 ,int8 )" `1198 
F N "runSetup" 0 92 ""
F G "runSetup" 0 92 "void()" `1202 
C L "runSetup" 0 96 1 "FUNCTION"
C L "runSetup" 0 96 1 "FUNCTION"
F N "okblink" 0 109 ""
F G "okblink" 0 109 "void()" `1203 
F N "updateState" 0 119 ""
F G "updateState" 0 119 "void()" `1204 
F N "runSuta" 0 131 ""
F G "runSuta" 0 131 "void()" `1205 
F N "getPhase" 0 140 ""
F G "getPhase" 0 140 "void()" `1206 
F N "runNormal" 0 146 ""
F G "runNormal" 0 146 "void()" `1207 
F N "doLoop" 0 153 ""
F G "doLoop" 0 153 "void()" `1208 
F N "MAIN" 0 167 ""
F G "MAIN" 0 168 "void()" `1209 
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "scanf" 1 255
F B "fscanf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "_iosctrl" 1 2
F B "profileout" 1 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "interrupt_enabled" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 4 0
F B "write_program_memory8" 4 0
F B "read_program_memory" 4 0
F B "read_program_memory8" 4 0
F B "read_rom_memory" 3 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_c" 1 0
F B "input_a" 0 0
F B "input_c" 0 0
F B "set_tris_a" 1 0
F B "set_tris_c" 1 0
F B "get_tris_a" 0 0
F B "get_tris_c" 0 0
F B "input_change_a" 0 0
F B "input_change_c" 0 0
F B "set_slow_slew_a" 1 0
F B "set_slow_slew_c" 1 0
F B "set_input_level_a" 1 0
F B "set_input_level_c" 1 0
F B "set_open_drain_a" 1 0
F B "set_open_drain_c" 1 0
F B "port_a_pullups" 1 0
F B "port_c_pullups" 1 0
F B "pin_select" 2 4
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "set_analog_pins" 0 255
F B "setup_adc_reference" 1 0
F B "setup_port_a" 1 2
F B "setup_adc_ports" 1 2
F B "get_adc_ports" 0 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_pwm1" 1 2
F B "set_pwm1_period" 1 0
F B "set_pwm1_phase" 1 0
F B "set_pwm1_offset" 1 0
F B "enable_pwm1_interrupt" 1 0
F B "disable_pwm1_interrupt" 1 0
F B "clear_pwm1_interrupt" 1 0
F B "pwm1_interrupt_active" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_pwm2" 1 2
F B "set_pwm2_period" 1 0
F B "set_pwm2_phase" 1 0
F B "set_pwm2_offset" 1 0
F B "enable_pwm2_interrupt" 1 0
F B "disable_pwm2_interrupt" 1 0
F B "clear_pwm2_interrupt" 1 0
F B "pwm2_interrupt_active" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_pwm3" 1 2
F B "set_pwm3_period" 1 0
F B "set_pwm3_phase" 1 0
F B "set_pwm3_offset" 1 0
F B "enable_pwm3_interrupt" 1 0
F B "disable_pwm3_interrupt" 1 0
F B "clear_pwm3_interrupt" 1 0
F B "pwm3_interrupt_active" 1 0
F B "set_pwm3_duty" 1 0
F B "setup_pwm4" 1 2
F B "set_pwm4_period" 1 0
F B "set_pwm4_phase" 1 0
F B "set_pwm4_offset" 1 0
F B "enable_pwm4_interrupt" 1 0
F B "disable_pwm4_interrupt" 1 0
F B "clear_pwm4_interrupt" 1 0
F B "pwm4_interrupt_active" 1 0
F B "set_pwm4_duty" 1 0
F B "setup_oscillator" 0 2
F B "pll_locked" 0 0
F B "setup_dac" 1 0
F B "dac_write" 1 0
F B "brownout_enable" 1 0
F B "setup_cwg" 4 0
F B "cwg_status" 0 0
F B "cwg_restart" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
